{"version":3,"sources":["AuthContext.js","config/axios.js","components/Header.js","api/authentication.js","components/BigButton.js","screens/Main.js","components/SmallButton.js","screens/CreatePlan/01_PlanStart.js","components/TimeRange.js","components/DateTimePicker.js","screens/CreatePlan/02_PlanTimes.js","screens/CreatePlan/03_RecipeTypes.js","screens/CreatePlan/04_RecipeRestrictions.js","screens/CreatePlan/05_AddRecipes.js","api/recipeSearch.js","api/recipes.js","screens/CreatePlan/00_CreatePlan.js","api/plans.js","components/Calendar.js","config/createEvents.js","screens/SinglePlan.js","screens/SamplePlan.js","screens/AllPlans.js","screens/Auth/Login.js","screens/Auth/Signup.js","screens/Auth/ForgotPassword.js","PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["AuthContext","React","createContext","loggedIn","user","handleLogin","axiosFoodInstance","axios","create","baseURL","timeout","axiosAuthInstance","withCredentials","axiosPlansInstance","axiosRecipesInstance","Header","auth","useContext","handleLogout","get","then","res","success","message","data","catch","Navbar","collapseOnSelect","bg","expand","className","style","styles","navbar","to","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","Button","variant","onClick","NavDropdown","title","Item","Divider","BigButton","props","size","block","createButton","text","Main","useEffect","console","log","Container","formContainer","p","SmallButton","e","PlanStart","useState","Date","currentDate","setCurrentDate","selected","onChange","date","handleChange","handleDateSelect","updateTimeBoxes","preventDefault","nextStep","saveAndSubmit","TimeRange","startTime","setStartTime","endTime","setEndTime","planTimes","dayIndex","timeIndex","timeContainer","changeStartTime","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","dateFormat","changeEndTime","DateTimePicker","currentTimeBlocks","step","mapTimes","map","value","topContainer","iconButton","opacity","iconLeft","prevDayStep","pNoBottom","moment","format","iconRight","addTimeBox","PlanTimes","setStep","planDates","prevStep","planDays","RecipeTypes","selectCuisines","cuisine","cuisines","indexOf","addNewCuisine","innerContainer","innerInnerContainer","Dropdown","dropdown","Menu","Cuisines","RecipeRestrictions","selectDiets","diet","diets","addNewDiet","selectIntolerances","intolerance","intolerances","addNewIntolerance","innerContainerDropdown","href","Restrictions","innerContainerButtons","AddRecipes","recipeData","setRecipeData","page","setPage","currentOffset","setCurrentOffset","selectRecipe","target","getAttribute","addNewRecipe","JSON","parse","setAttribute","offset","cuisinesString","join","intolerancesString","dietString","params","apiKey","process","number","sort","addRecipeInformation","fillIngredients","recipeSearch","results","cardContainer","recipe","Card","recipeCard","key","Img","src","image","Body","Title","Text","readyInMinutes","sourceUrl","rel","recipedetails","stringify","buttonsContainer","handleFormSubmit","addRecipes","link","cookTime","prepTime","totalTime","servings","ingredients","steps","post","recipeTitle","recipeImage","recipeLink","recipeCuisines","recipeCookTime","recipePrepTime","recipeTotalTime","recipeServings","recipeIngredients","recipeSteps","CreatePlan","startDate","setStartDate","setPlanDates","setPlanTimes","planCuisines","setPlanCuisines","planIntolerances","setPlanIntolerances","planDiets","setPlanDiets","planRecipes","setPlanRecipes","history","useHistory","startCopy","start","end","add","planDatesCopy","planTimesCopy","push","planId","dates","times","planTimesObject","i","length","currentDay","timeSlot","toString","userId","a","cookingMinutes","preparationMinutes","extendedIngredients","analyzedInstructions","planRecipeDetails","recipeId","handleInputChange","dayStep","timesCopy","time","timeStep","place","cuisinesCopy","intolerancesCopy","dietsCopy","recipesCopy","contentContainer","formSteps","SamplePlan","plugins","dayGridPlugin","timeGridPlugin","initialView","visibleRange","endDate","headerToolbar","left","center","right","events","allDaySlot","slotMinTime","prototype","addDays","days","this","valueOf","setDate","getDate","createEvents","recipes","recipeTitles","recipe_title","Object","keys","startTimeDate","endTimeDate","event","shift","Plan","dataLoaded","setDataLoaded","planData","setPlanData","useParams","createIngredientsList","ingredientsList","Set","recipe_ingredients","ingredient","name","Array","from","planHeader","calendarContainer","outerCardContainer","cardHeader","innerCardContainer","index","recipe_image","recipe_cuisines","recipe_total_time","recipe_link","headerStyle","AllPlans","plans","setPlans","plan","Login","redirectToReferrer","setRedirectToReferrer","email","setEmail","password","setPassword","pathname","Form","onSubmit","username","login","alert","Group","controlId","bssize","Label","Control","autoFocus","type","disabled","Signup","passwordValid","setPasswordValid","signup","Password","PrivateRoute","Component","component","rest","render","state","location","App","setLoggedIn","setUser","Provider","exact","path","SinglePlan","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"4oBAEaA,EAAcC,IAAMC,cAAc,CAC3CC,UAAU,EACVC,KAAM,GACNC,YAAa,e,iBCHJC,EAAoBC,IAAMC,OAAO,CAC1CC,QAAS,oDACTC,QAAS,MAIAC,EAAoBJ,IAAMC,OAAO,CAE1CC,QAAS,iCACTC,QAAS,IACTE,iBAAiB,IAGRC,EAAqBN,IAAMC,OAAO,CAE3CC,QAAS,kCACTC,QAAS,MAGAI,EAAuBP,IAAMC,OAAO,CAE7CC,QAAS,oCACTC,QAAS,MClBE,SAASK,IAEpB,IAAMC,EAAOC,qBAAWjB,GAElBkB,EAAe,WCYdP,EAAkBQ,IAAI,WACxBC,MAAK,SAACC,GAAD,MAAU,CAAEC,SAAS,EAAMC,QAAS,0BAA2BC,KAAMH,EAAIG,SAASC,OAAM,SAACJ,GAAD,MAAU,CAAEC,SAAS,EAAOC,QAASF,EAAKG,KAAMH,MDXzID,MAAK,SAACC,GACHL,EAAKX,YAAYgB,EAAIC,aAKjC,OAAIN,EAAKb,SAED,kBAACuB,EAAA,EAAD,CAAQC,kBAAgB,EAACC,GAAG,QAAQC,OAAO,KAAKC,UAAU,SAASC,MAAOC,EAAOC,QAC7E,kBAAC,gBAAD,CAAeC,GAAG,KACd,kBAACR,EAAA,EAAOS,MAAR,gBAGJ,kBAACT,EAAA,EAAOU,OAAR,CAAeC,gBAAc,qBAC7B,kBAACX,EAAA,EAAOY,SAAR,CAAiBC,GAAG,oBAChB,kBAACC,EAAA,EAAD,CAAKV,UAAU,WACX,kBAAC,gBAAD,CAAeI,GAAG,KACd,kBAACM,EAAA,EAAIC,KAAL,qBAEJ,kBAAC,gBAAD,CAAeP,GAAG,QACd,kBAACM,EAAA,EAAIC,KAAL,wBAEJ,kBAACC,EAAA,EAAD,CAAQC,QAAQ,kBAAkBC,QAAS,kBAAM1B,MAAjD,aAShB,kBAACQ,EAAA,EAAD,CAAQE,GAAG,QAAQC,OAAO,KAAKC,UAAU,SAASC,MAAOC,EAAOC,QAC5D,kBAAC,gBAAD,CAAeC,GAAG,SACd,kBAACR,EAAA,EAAOS,MAAR,gBAGJ,kBAACT,EAAA,EAAOU,OAAR,CAAeC,gBAAc,qBAC7B,kBAACX,EAAA,EAAOY,SAAR,CAAiBC,GAAG,oBAChB,kBAACC,EAAA,EAAD,CAAKV,UAAU,WAKX,kBAACe,EAAA,EAAD,CAAaC,MAAM,UAAUP,GAAG,sBAC5B,kBAAC,gBAAD,CAAeL,GAAG,UACd,kBAACW,EAAA,EAAYE,KAAb,eAEJ,kBAAC,gBAAD,CAAeb,GAAG,WACd,kBAACW,EAAA,EAAYE,KAAb,iBAEJ,kBAACF,EAAA,EAAYG,QAAb,UAYxB,IAAMhB,EAAS,CACXC,OAAQ,CACJ,QAAW,KACX,WAAc,YE1EP,SAASgB,EAAUC,GAC9B,OACA,kBAACR,EAAA,EAAD,CAAQC,QAAQ,UAAUQ,KAAK,KAAKC,OAAK,EAACrB,MAAOC,EAAOqB,cAAeH,EAAMI,MAIjF,IAAMtB,EAAQ,CACVqB,aAAc,CACV,MAAS,S,QCJF,SAASE,IAEpB,IAAMvC,EAAOC,qBAAWjB,GAMxB,OAJAwD,qBAAU,WACNC,QAAQC,IAAI,6BAA8B1C,EAAKZ,QAChD,CAACY,EAAKZ,OAGL,kBAACuD,EAAA,EAAD,CAAW5B,MAAOC,EAAO4B,eACrB,uBAAG7B,MAAOC,EAAO6B,GAAjB,2LACA,uBAAG9B,MAAOC,EAAO6B,GAAjB,iEACA,kBAAC,UAAD,CAAS3B,GAAG,WAAU,kBAACe,EAAD,CAAWK,KAAK,kBAKlD,IAAMtB,EAAS,CACX6B,EAAG,CACC,UAAa,SACb,MAAS,SAEbD,cAAe,CACX,QAAW,OACX,cAAiB,SACjB,WAAc,SACd,eAAkB,SAClB,OAAU,U,wCC/BH,SAASE,EAAYZ,GAQhC,OACA,kBAACR,EAAA,EAAD,CAAQC,QAAQ,UAAUQ,KAAK,KAAKC,OAAK,EACzCR,QAAS,SAACmB,GAAD,OAAKb,EAAMN,QAAQmB,IAC5BhC,MAAOC,EAAOqB,cAAeH,EAAMI,MAIvC,IAAMtB,EAAQ,CACVqB,aAAc,CACV,MAAS,MACT,OAAU,SCfH,SAASW,EAAUd,GAAQ,IAAD,EAECe,mBAAS,IAAIC,MAFd,mBAE9BC,EAF8B,KAEjBC,EAFiB,KAcrC,OACI,kBAACT,EAAA,EAAD,CAAW5B,MAAOC,EAAO4B,eACrB,uBAAG7B,MAAOC,EAAO6B,GAAjB,sCAEA,kBAAC,IAAD,CAAYQ,SAAUF,EAAaG,SAAU,SAACC,GAAD,OAd5B,SAACA,GACtBH,EAAeG,GACfrB,EAAMsB,aAAaD,GAYwCE,CAAiBF,IAAOG,gBAAiBxB,EAAMwB,kBACtG,kBAACZ,EAAD,CAAaR,KAAK,OAAOV,QAAS,SAACmB,IAVrB,SAACA,GACnBA,EAAEY,iBACFzB,EAAM0B,WAQyCC,CAAcd,OAKrE,IAAM/B,EAAS,CACX6B,EAAG,CACC,UAAa,SACb,MAAS,SAEbD,cAAe,CACX,QAAW,OACX,cAAiB,SACjB,WAAc,SACd,eAAkB,SAClB,OAAU,U,mCCnCH,SAASkB,EAAU5B,GAAQ,IAAD,EAEHe,mBAASf,EAAM6B,WAFZ,mBAE9BA,EAF8B,KAEnBC,EAFmB,OAGPf,mBAASf,EAAM+B,SAHR,mBAG9BA,EAH8B,KAGrBC,EAHqB,KAoBrC,OALA1B,qBAAU,WACNwB,EAAa9B,EAAMiC,UAAUjC,EAAMkC,UAAUlC,EAAMmC,WAAW,IAC9DH,EAAWhC,EAAMiC,UAAUjC,EAAMkC,UAAUlC,EAAMmC,WAAW,MAC7D,CAACnC,EAAMiC,UAAWjC,EAAMkC,SAAUlC,EAAMmC,YAGvC,kBAAC1B,EAAA,EAAD,CAAW5B,MAAOC,EAAOsD,eACrB,kBAAC,IAAD,CACIjB,SAAUU,EACVT,SAAU,SAAAC,GAAI,OAnBF,SAACA,GACrBrB,EAAMwB,gBAAgBxB,EAAMkC,SAAUlC,EAAMmC,UAAWd,EAAM,GAC7DS,EAAaT,GAiBagB,CAAgBhB,IAClCiB,gBAAc,EACdC,oBAAkB,EAClBC,cAAe,GACfC,YAAY,OACZC,WAAW,YAEf,wBAAI7D,MAAO,CAAE,MAAS,QAAS,OAAU,SAAzC,MACA,kBAAC,IAAD,CACIsC,SAAUY,EACVX,SAAU,SAAAC,GAAI,OAxBJ,SAACA,GACnBrB,EAAMwB,gBAAgBxB,EAAMkC,SAAUlC,EAAMmC,UAAWd,EAAM,GAC7DW,EAAWX,GAsBesB,CAActB,IAChCiB,gBAAc,EACdC,oBAAkB,EAClBC,cAAe,GACfC,YAAY,OACZC,WAAW,aAM3B,IAAM5D,EAAS,CACXsD,cAAe,CACX,QAAW,OACX,cAAiB,MACjB,WAAc,SACd,eAAkB,WChDX,SAASQ,EAAe5C,GAEnC,IAAI6C,EAAoB7C,EAAMiC,UAAUjC,EAAM8C,MAMxCC,EAAWF,EAAkBG,KAAI,SAACC,EAAOd,GAC3C,OAAQ,kBAACP,EAAD,CAAWC,UAAWgB,EAAkBV,GAAW,GAAIJ,QAASc,EAAkBV,GAAW,GAAID,SAAUlC,EAAM8C,KAAMX,UAAWA,EAAWF,UAAWjC,EAAMiC,UAClKT,gBAAiBxB,EAAMwB,qBAI/B,OACI,kBAACf,EAAA,EAAD,CAAW5B,MAAOC,EAAO4B,eACrB,kBAACD,EAAA,EAAD,CAAW5B,MAAOC,EAAOoE,cACL,IAAflD,EAAM8C,KACH,kBAACtD,EAAA,EAAD,CAAQX,MAAOC,EAAOqE,WAAY1D,QAAQ,QACtC,kBAAC,IAAD,CAAqBZ,MAAO,CAAEuE,QAAS,MAIvC,kBAAC5D,EAAA,EAAD,CAAQX,MAAOC,EAAOqE,WAAY1D,QAAQ,QACtC,kBAAC,IAAD,CAAqBZ,MAAOC,EAAOuE,SAAU3D,QAASM,EAAMsD,eAGxE,uBAAGzE,MAAOC,EAAOyE,WAAYC,IAAOxD,EAAMqB,MAAMoC,OAAO,cACvC,IAAfzD,EAAM8C,KACH,kBAACtD,EAAA,EAAD,CAAQX,MAAOC,EAAOqE,WAAY1D,QAAQ,QACtC,kBAAC,IAAD,CAAsBZ,MAAO,CAAEuE,QAAS,MAIxC,kBAAC5D,EAAA,EAAD,CAAQX,MAAOC,EAAOqE,WAAY1D,QAAQ,QACtC,kBAAC,IAAD,CAAsBZ,MAAOC,EAAO4E,UAAWhE,QAASM,EAAM0B,aAI7EqB,EACD,kBAACvD,EAAA,EAAD,CAAQX,MAAOC,EAAOqE,WAAY1D,QAAQ,OAAOC,QAAS,WAnC9DM,EAAM2D,WAAW3D,EAAM8C,QAoCf,mCAMhB,IAAMhE,EAAS,CACXyE,UAAW,CACP,UAAa,SACb,MAAS,QACT,OAAU,IACV,WAAc,QAElB7C,cAAe,CACX,QAAW,OACX,cAAiB,SACjB,WAAc,SACd,eAAkB,UAEtByC,WAAY,CACR,MAAS,QACT,eAAkB,QAEtBE,SAAU,CACN,OAAU,OACV,SAAY,OACZ,MAAS,QAEbK,UAAW,CACP,OAAU,OACV,SAAY,OACZ,MAAS,QAEbR,aAAc,CACV,QAAW,OACX,cAAiB,MACjB,WAAc,SACd,eAAkB,WChFX,SAASU,EAAU5D,GAAQ,IAAD,EAEfe,mBAAS,GAFM,mBAEhC+B,EAFgC,KAE1Be,EAF0B,KAI/BnC,EAAW,WACbmC,EAAQf,GAAc,IAGpBQ,EAAc,WAChBO,EAAQf,GAAc,IAkG1B,OACI,kBAACrC,EAAA,EAAD,CAAW5B,MAAOC,EAAO4B,eACrB,uBAAG7B,MAAOC,EAAO6B,GAAjB,yEA5FS,WACb,OAAQmC,GACJ,KAAK,EACD,OAAO,kBAACF,EAAD,CACHlB,SAAU,kBAAMA,KAChBL,KAAMrB,EAAM8D,UAAUhB,GACtBb,UAAWjC,EAAMiC,UACjB0B,WAAY3D,EAAM2D,WAClBnC,gBAAiBxB,EAAMwB,gBACvBsB,KAAMA,IAGd,KAAK,EACD,OAAO,kBAACF,EAAD,CACHlB,SAAU,kBAAMA,KAChB4B,YAAa,kBAAMA,KACnBS,SAAU,kBAAM/D,EAAM+D,YACtB1C,KAAMrB,EAAM8D,UAAUhB,GACtBb,UAAWjC,EAAMiC,UACjB0B,WAAY3D,EAAM2D,WAClBnC,gBAAiBxB,EAAMwB,gBACvBsB,KAAMA,IAId,KAAK,EAWL,KAAK,EAWL,KAAK,EAWL,KAAK,EACD,OAAO,kBAACF,EAAD,CACHlB,SAAU,kBAAMA,KAChB4B,YAAa,kBAAMA,KACnBjC,KAAMrB,EAAM8D,UAAUhB,GACtBb,UAAWjC,EAAMiC,UACjB0B,WAAY3D,EAAM2D,WAClBnC,gBAAiBxB,EAAMwB,gBACvBsB,KAAMA,IAGd,KAAK,EACD,OAAO,kBAACF,EAAD,CACHU,YAAa,kBAAMA,KACnBjC,KAAMrB,EAAM8D,UAAUhB,GACtBb,UAAWjC,EAAMiC,UACjB0B,WAAY3D,EAAM2D,WAClBnC,gBAAiBxB,EAAMwB,gBACvBsB,KAAMA,IAEd,QACI,OAAO,kBAACF,EAAD,CACHlB,SAAU,kBAAMA,KAChBL,KAAMrB,EAAM8D,UAAUhB,GACtBb,UAAWjC,EAAMiC,UACjB0B,WAAY3D,EAAM2D,WAClBnC,gBAAiBxB,EAAMwB,gBACvBsB,KAAMA,KASbkB,GACD,kBAACpD,EAAD,CAAaR,KAAK,OAAOV,QAAS,WAAQM,EAAM+D,cAChD,kBAACnD,EAAD,CAAaR,KAAK,OAAOV,QAAS,SAACmB,IArGrB,SAACA,GACnBA,EAAEY,iBACFzB,EAAM0B,WAmGyCC,CAAcd,OAKrE,IAAM/B,EAAS,CACX6B,EAAG,CACC,UAAa,SACb,MAAS,SAEb4C,UAAW,CACP,UAAa,SACb,MAAS,QACT,OAAU,IACV,WAAc,QAElB7C,cAAe,CACX,QAAW,OACX,cAAiB,SACjB,WAAc,SACd,eAAkB,SAClB,OAAU,SAEdyC,WAAY,CACR,MAAS,QACT,eAAkB,QAEtBE,SAAU,CACN,OAAU,OACV,SAAY,QAEhBK,UAAW,CACP,OAAU,OACV,SAAY,S,iBCjJL,SAASO,EAAYjE,GAEhC,IAWMkE,EAAiB,SAACC,GAChBnE,EAAMoE,SAASC,QAAQF,GAAW,GAClC5D,QAAQC,IAAI,wBAAyB2D,GACrCnE,EAAMsE,cAAcH,IAGpB5D,QAAQC,IAAI,6BAUpB,OACI,kBAACC,EAAA,EAAD,CAAW5B,MAAOC,EAAO4B,eACrB,uBAAG7B,MAAOC,EAAO6B,GAAjB,wEACA,uBAAG9B,MAAOC,EAAO6B,GAAjB,qDACA,kBAACF,EAAA,EAAD,CAAW5B,MAAOC,EAAOyF,gBACrB,kBAAC9D,EAAA,EAAD,CAAW5B,MAAOC,EAAO0F,qBACrB,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAASvF,OAAV,CAAiBO,QAAQ,UAAUJ,GAAG,iBAClCR,MAAOC,EAAO4F,UADlB,YAKA,kBAACD,EAAA,EAASE,KAAV,KAjCTC,IAAkB5B,KAAI,SAACmB,GAC1B,OAAO,kBAACM,EAAA,EAAS5E,KAAV,CAAeH,QAAS,kBAAMwE,EAAeC,KAAWA,SAwC3D,kBAAC1D,EAAA,EAAD,CAAW5B,MAAOC,EAAO0F,qBAzB1BxE,EAAMoE,SAASpB,KAAI,SAACmB,GACvB,OAAO,kBAACvD,EAAD,CAAaR,KAAM+D,SA4B1B,kBAACvD,EAAD,CAAaR,KAAK,OAAOV,QAAS,WAAQM,EAAM+D,cAChD,kBAACnD,EAAD,CAAaR,KAAK,OAAOV,QAAS,SAACmB,IApDrB,SAACA,GACnBA,EAAEY,iBACFzB,EAAM0B,WAkDyCC,CAAcd,OAKrE,IAAM/B,EAAS,CACX6B,EAAG,CACC,UAAa,SACb,MAAS,SAEbD,cAAe,CACX,QAAW,OACX,cAAiB,SACjB,WAAc,SACd,eAAkB,SAClB,OAAU,SAEd6D,eAAgB,CACZ,QAAW,OACX,cAAiB,MACjB,WAAc,SACd,eAAkB,iBAEtBC,oBAAqB,CACjB,QAAW,OACX,cAAiB,MACjB,WAAc,SACd,eAAkB,SAClB,MAAS,MACT,OAAU,IACV,QAAW,KAEfE,SAAU,CACN,MAAS,U,QCvFF,SAASG,GAAmB7E,GAEvC,IAYM8E,EAAc,SAACC,GACb/E,EAAMgF,MAAMX,QAAQU,GAAQ,EAC5B/E,EAAMiF,WAAWF,GAGjBxE,QAAQC,IAAI,0BAId0E,EAAqB,SAACC,GACpBnF,EAAMoF,aAAaf,QAAQc,GAAe,EAC1CnF,EAAMqF,kBAAkBF,GAGxB5E,QAAQC,IAAI,iCAgBpB,OACI,kBAACC,EAAA,EAAD,CAAW5B,MAAOC,GAAO4B,eACrB,uBAAG7B,MAAOC,GAAO6B,GAAjB,mEACA,kBAACF,EAAA,EAAD,CAAW5B,MAAOC,GAAOyF,gBACrB,kBAAC9D,EAAA,EAAD,CAAW5B,MAAOC,GAAOwG,wBACrB,kBAACb,EAAA,EAAD,KACI,kBAACA,EAAA,EAASvF,OAAV,CAAiBO,QAAQ,UAAUJ,GAAG,iBAClCR,MAAOC,GAAO4F,UADlB,SAKA,kBAACD,EAAA,EAASE,KAAV,KACI,kBAACF,EAAA,EAAS5E,KAAV,CAAe0F,KAAK,cAApB,QACA,kBAACd,EAAA,EAAS3E,QAAV,MAtDb0F,IAAmBxC,KAAI,SAAC+B,GAC3B,OAAO,kBAACN,EAAA,EAAS5E,KAAV,CAAeH,QAAS,kBAAMoF,EAAYC,KAAQA,QAyDjD,kBAACN,EAAA,EAAD,KACI,kBAACA,EAAA,EAASvF,OAAV,CAAiBO,QAAQ,UAAUJ,GAAG,iBAClCR,MAAOC,GAAO4F,UADlB,gBAKA,kBAACD,EAAA,EAASE,KAAV,KACI,kBAACF,EAAA,EAAS5E,KAAV,CAAe0F,KAAK,cAApB,QACA,kBAACd,EAAA,EAAS3E,QAAV,MA5Db0F,IAA0BxC,KAAI,SAACmC,GAClC,OAAO,kBAACV,EAAA,EAAS5E,KAAV,CAAeH,QAAS,kBAAMwF,EAAmBC,KAAeA,SAgEnE,kBAAC1E,EAAA,EAAD,CAAW5B,MAAOC,GAAO2G,uBAzC1BzF,EAAMoF,aAAapC,KAAI,SAACmC,GAC3B,OAAO,kBAACvE,EAAD,CAAaR,KAAI,UAAK+E,EAAL,cAKrBnF,EAAMgF,MAAMhC,KAAI,SAAC+B,GACpB,OAAO,kBAACnE,EAAD,CAAaR,KAAM2E,SAuC1B,kBAACnE,EAAD,CAAaR,KAAK,OAAOV,QAAS,WAAQM,EAAM+D,cAChD,kBAACnD,EAAD,CAAaR,KAAK,OAAOV,QAAS,SAACmB,GAAQb,EAAM0B,SAASb,OAKtE,IAAM/B,GAAS,CACX6B,EAAG,CACC,UAAa,SACb,MAAS,SAEbD,cAAe,CACX,QAAW,OACX,cAAiB,SACjB,WAAc,SACd,eAAkB,SAClB,OAAU,SAEd6D,eAAgB,CACZ,QAAW,OACX,cAAiB,MACjB,WAAc,SACd,eAAkB,iBAEtBe,uBAAwB,CACpB,QAAW,OACX,cAAiB,SACjB,WAAc,SACd,eAAkB,SAClB,MAAS,MACT,OAAU,IACV,QAAW,KAEfG,sBAAuB,CACnB,QAAW,OACX,cAAiB,MACjB,WAAc,SACd,eAAkB,SAClB,MAAS,MACT,OAAU,IACV,QAAW,KAEff,SAAU,CACN,MAAS,QACT,OAAU,S,UC5HH,SAASgB,GAAW1F,GAAQ,IAAD,EAEFe,mBAAS,IAFP,mBAE/B4E,EAF+B,KAEnBC,EAFmB,OAGd7E,mBAAS,GAHK,mBAG/B8E,EAH+B,KAGzBC,EAHyB,OAII/E,mBAAS,GAJb,mBAI/BgF,EAJ+B,KAIhBC,EAJgB,KAgChCC,EAAe,SAACpF,GAClBN,QAAQC,IAAI,uBAAwBK,EAAEqF,OAAOC,aAAa,kBAC1DnG,EAAMoG,aAAaC,KAAKC,MAAMzF,EAAEqF,OAAOC,aAAa,mBAEpDtF,EAAEqF,OAAOK,aAAa,YAAY,IAgBtC,OAPAjG,qBAAU,YC9CC,SAAsB8D,EAAUgB,EAAcL,EAAMyB,GAC/DjG,QAAQC,IAAI,wBAAyB4D,GAGrC,IAAIqC,EAAiBrC,EAASsC,KAAK,KAC/BC,EAAqBvB,EAAasB,KAAK,KACvCE,EAAa7B,EAAK2B,KAAK,KAE3B,OAAOtJ,EAAkBa,IAAI,GAAI,CAC7B4I,OAAQ,CACJC,OAZGC,mCAaH5C,QAASsC,EACTrB,aAAcuB,EACd5B,KAAM6B,EACNI,OAAQ,EACRR,OAAQA,EACRS,KAAM,aACNC,sBAAsB,EACtBC,iBAAiB,MD6BrBC,CAAapH,EAAMoE,SAAUpE,EAAMoF,aAAcpF,EAAMgF,MAAOe,GAAe7H,MAAK,SAACC,GAC/EoC,QAAQC,IAAI,wBAAyBrC,EAAIG,KAAK+I,SAC9CzB,EAAczH,EAAIG,KAAK+I,cAE5B,CAACxB,IAGA,kBAACpF,EAAA,EAAD,CAAW5B,MAAOC,GAAO4B,eACrB,uBAAG7B,MAAOC,GAAO6B,GAAjB,6DACA,6BACA,uBAAG9B,MAAOC,GAAO6B,GAAjB,qFACA,kBAACF,EAAA,EAAD,CAAW5B,MAAOC,GAAOwI,eAjDtB3B,EAAW3C,KAAI,SAACuE,GACnB,OAAO,kBAACC,GAAA,EAAD,CAAM3I,MAAOC,GAAO2I,WAAYC,IAAKH,EAAOlI,IAC/C,kBAACmI,GAAA,EAAKG,IAAN,CAAUlI,QAAQ,MAAMmI,IAAKL,EAAOM,QACpC,kBAACL,GAAA,EAAKM,KAAN,KACI,kBAACN,GAAA,EAAKO,MAAN,KAAaR,EAAO3H,OACpB,kBAAC4H,GAAA,EAAKQ,KAAN,kBAAsBT,EAAOnD,SAASsC,KAAK,OAC3C,kBAACc,GAAA,EAAKQ,KAAN,oBAAwBT,EAAOU,eAA/B,YACA,kBAACT,GAAA,EAAKQ,KAAN,KAAY,uBAAGzC,KAAMgC,EAAOW,UAAWhC,OAAO,SAASiC,IAAI,uBAA/C,mBACZ,kBAAC3I,EAAA,EAAD,CAAQC,QAAQ,UAAU2I,cAAe/B,KAAKgC,UAAUd,GAAS7H,QAAS,SAACmB,GAAD,OAAOoF,EAAapF,KAA9F,qBA4CR,kBAACJ,EAAA,EAAD,CAAW5B,MAAOC,GAAOwJ,kBACpBvC,EAAgB,GAAK,kBAACnF,EAAD,CAAaR,KAAK,WAAWV,QAAS,SAACmB,GAjCrEmF,EAAiBD,EAAgB,IACjCD,EAAQD,EAAO,MAiCP,kBAACjF,EAAD,CAAaR,KAAK,OAAOV,QAAS,SAACmB,GAvC3CmF,EAAiBD,EAAgB,IACjCD,EAAQD,EAAO,OAwCX,kBAACjF,EAAD,CAAaR,KAAK,gBAAgBV,QAAS,WAAQM,EAAMuI,uBAKrE,IAAMzJ,GAAS,CACX6B,EAAG,CACC,UAAa,SACb,MAAS,SAEbD,cAAe,CACX,QAAW,OACX,UAAa,QACb,cAAiB,SACjB,WAAc,SACd,eAAkB,SAClB,SAAY,OACZ,OAAU,QAEd4G,cAAe,CACX,QAAW,OACX,YAAa,OACb,cAAiB,MACjB,WAAc,SACd,eAAkB,gBAClB,SAAY,OACZ,OAAU,QAEdgB,iBAAkB,CACd,QAAW,OACX,cAAiB,MACjB,WAAc,SACd,eAAkB,UAEtBb,WAAY,CACR,QAAW,OACX,OAAU,OACV,MAAS,UExGV,SAASe,GAAW5I,EAAOiI,EAAOY,EAAMrE,EAAUsE,EAAUC,EAAUC,EAAWC,EAAUC,EAAaC,GAC3G,OAAOnL,EAAqBoL,KAAK,eAAgB,CAC7CC,YAAarJ,EACbsJ,YAAarB,EACbsB,WAAYV,EACZW,eAAgB/C,KAAKgC,UAAUjE,GAC/BiF,eAAgBX,EAChBY,eAAgBX,EAChBY,gBAAiBX,EACjBY,eAAgBX,EAChBY,kBAAmBpD,KAAKgC,UAAUS,GAClCY,YAAarD,KAAKgC,UAAUU,KAC7B7K,MAAK,SAACC,GAAD,MAAU,CAAEC,SAAS,EAAMC,QAAS,gCAAiCC,KAAMH,EAAIG,SAASC,OAAM,SAACJ,GAAD,MAAU,CAAEC,SAAS,EAAOC,QAASF,EAAKG,KAAMH,M,aCD3I,SAASwL,KAAc,IAAD,EAEX5I,mBAAS,GAFE,mBAE5B+B,EAF4B,KAEtBe,EAFsB,OAGC9C,mBAAS,IAAIC,MAHd,mBAG1B4I,EAH0B,KAGfC,EAHe,OAIC9I,mBAAS,IAJV,mBAI1B+C,EAJ0B,KAIfgG,EAJe,OAKC/I,mBAAS,IALV,mBAK1BkB,EAL0B,KAKf8H,EALe,OAMOhJ,mBAAS,IANhB,mBAM1BiJ,EAN0B,KAMZC,EANY,OAOelJ,mBAAS,IAPxB,mBAO1BmJ,EAP0B,KAORC,EAPQ,OAQCpJ,mBAAS,IARV,mBAQ1BqJ,EAR0B,KAQfC,EARe,OASKtJ,mBAAS,IATd,mBAS1BuJ,EAT0B,KASbC,EATa,KAW3BzM,EAAOC,qBAAWjB,GAClB0N,EAAUC,eAEV/I,EAAW,WAEb,GAAa,IAAToB,EAAY,CAcZ,IAXA,IAAI4H,EAAYd,EAGZe,EAAQnH,IAAOoG,EAAW,cAC1BgB,EAAMpH,IAAOmH,GAAOE,IAAI,EAAG,QAG3BC,EAAgB,GAChBC,EAAgB,GAGbJ,EAAQC,GAAK,CAChBE,EAAcE,KAAKL,EAAMlH,OAAO,eAEhCkH,EADcnH,IAAOmH,GAAOE,IAAI,EAAG,QAOnCE,EAAcC,KAAK,CAAC,CAACN,EAAWA,KAIpCZ,EAAagB,GACbf,EAAagB,GAGjBlH,EAAQf,GAAc,IAGpByF,EAAmB,WACrB,IAAI0C,EAEJ1K,QAAQC,IAAI,sBAIZ,IAFA,IClEmBtD,EAAMyN,EAAOO,EAAOC,EAAO/G,EAAUgB,EAAcJ,EDkElEoG,EAAkB,GAEbC,EAAI,EAAGA,EAAIpJ,EAAUqJ,OAAQD,IAAK,CAEvCD,EAAgBC,GAAK,GACrB,IAHuC,EAGnCE,EAAatJ,EAAUoJ,GAHY,cAKlBE,GALkB,IAKvC,2BAAiC,CAAC,IAAzBC,EAAwB,QAC7BJ,EAAgBC,GAAGG,EAAS,GAAGC,YAAcD,EAAS,GAAGC,YANtB,gCCpExBvO,ED+ERY,EAAKZ,KC/ESyN,ED+EHf,EC/EUsB,ED+ECpH,EC/EMqH,ED+EKC,EC/EEhH,ED+Ee4F,EC/EL5E,ED+EmB8E,EC/ELlF,ED+EuBoF,EC9E1FzM,EAAmBqL,KAAK,eAAgB,CAC3C0C,OAAQxO,EACR0M,UAAWe,EACX7G,UAAWuC,KAAKgC,UAAU6C,GAC1BjJ,UAAWoE,KAAKgC,UAAU8C,GAC1BnB,aAAc3D,KAAKgC,UAAUjE,GAC7B8F,iBAAkB7D,KAAKgC,UAAUjD,GACjCgF,UAAW/D,KAAKgC,UAAUrD,KAC3B9G,MAAK,SAACC,GAAD,MAAU,CAAEC,SAAS,EAAMC,QAAS,gCAAiCC,KAAMH,EAAIG,SAASC,OAAM,SAACJ,GAAD,MAAU,CAAEC,SAAS,EAAOC,QAASF,EAAKG,KAAMH,ODsE1CD,MAAK,SAACC,GAE1GoC,QAAQC,IAAI,gBACZyK,EAAS9M,EAAIG,KAAKe,MAEnBnB,KALH,sBAKQ,gCAAAyN,EAAA,oEACerB,GADf,+DACK/C,EADL,iBAEMiB,GAAWjB,EAAO3H,MAAO2H,EAAOM,MAAON,EAAOW,UAAWX,EAAOnD,SAAUmD,EAAOqE,eAAgBrE,EAAOsE,mBAAoBtE,EAAOU,eAAgBV,EAAOsB,SAAUtB,EAAOuE,oBAAqBvE,EAAOwE,sBAAsB7N,KAA7N,+BAAAyN,EAAA,MAAkO,WAAOxN,GAAP,eAAAwN,EAAA,6DAG9NK,EAAoB,CACtBf,OAAQA,EACRgB,SAAU9N,EAAIG,KAAKe,IAL6M,SC1EzNf,EDkFU0N,ECjF9BrO,EAAmBqL,KAAK,gBAAiB,CAC5C1K,SACDJ,MAAK,SAACC,GAAD,MAAU,CAAEC,SAAS,EAAMC,QAAS,gCAAiCC,KAAMH,EAAIG,SAASC,OAAM,SAACJ,GAAD,MAAU,CAAEC,SAAS,EAAOC,QAASF,EAAKG,KAAMH,MDuE8F,iCC1EjP,IAAwBG,ID0EyN,OAAlO,uDAFN,sMAaLJ,MAAK,WAEJsM,EAAQQ,KAAK,gBAAkBC,OAIjClH,EAAW,WACbF,EAAQf,GAAc,IAIpBoJ,EAAiB,uCAAG,WAAO7K,GAAP,SAAAsK,EAAA,sDAET,IAAT7I,GACA+G,EAAaxI,GAHK,2CAAH,sDAOjBsC,EAAU,uCAAG,WAAOwI,GAAP,mBAAAR,EAAA,6DAEXS,EAFW,YAEKnK,GAEhByI,EAAYd,GAEZyC,EAAOD,EAAUD,IAGhBnB,KAAK,CAACN,EAAWA,IAGtB0B,EAAUD,GAAWE,EAZN,SAeTtC,EAAaqC,GAfJ,2CAAH,sDAkBV5K,EAAe,uCAAG,WAAO2K,EAASG,EAAUjL,EAAMkL,GAAhC,iBAAAZ,EAAA,6DAGhBS,EAHgB,YAGAnK,GAETmK,EAAUD,GAASG,GAAUC,GAGxCF,EAAOhL,EAGP+K,EAAUD,GAASG,GAAUC,GAASF,EAXlB,SAcdtC,EAAaqC,GAdC,2CAAH,4DAiBf9H,GAAa,uCAAG,WAAOH,GAAP,eAAAwH,EAAA,6DAEda,EAFc,YAEKxC,IAGVgB,KAAK7G,GALA,SAQZ8F,EAAgBuC,GARJ,2CAAH,sDAWbnH,GAAiB,uCAAG,WAAOF,GAAP,eAAAwG,EAAA,6DAElBc,EAFkB,YAEKvC,IAGVc,KAAK7F,GALA,SAQhBgF,EAAoBsC,GARJ,2CAAH,sDAWjBxH,GAAU,uCAAG,WAAOF,GAAP,eAAA4G,EAAA,6DAEXe,EAFW,YAEKtC,IAGVY,KAAKjG,GALA,SAQTsF,EAAaqC,GARJ,2CAAH,sDAWVtG,GAAY,uCAAG,WAAOmB,GAAP,eAAAoE,EAAA,6DAEbgB,EAFa,YAEKrC,IAGVU,KAAKzD,GALA,SAQXgD,EAAeoC,GARJ,2CAAH,sDAWlBrM,qBAAU,WACNC,QAAQC,IAAI,wCAAyCoJ,GACrDrJ,QAAQC,IAAI,uCAAwCsD,GACpDvD,QAAQC,IAAI,wCAAyCyB,GACrD1B,QAAQC,IAAI,iBAAkBsC,GAC9BvC,QAAQC,IAAI,+BAAgCwJ,GAC5CzJ,QAAQC,IAAI,mCAAoC0J,GAChD3J,QAAQC,IAAI,4BAA6B4J,GACzC7J,QAAQC,IAAI,yBAA0B8J,MAyD1C,OACI,kBAAC7J,EAAA,EAAD,CAAW5B,MAAOC,GAAO8N,kBAvDX,WACd,OAAQ9J,GACJ,KAAK,EACD,OAAO,kBAAChC,EAAD,CACHY,SAAU,kBAAMA,KAChBJ,aAAc,SAACD,GAAD,OAAU6K,EAAkB7K,MAElD,KAAK,EACD,OAAO,kBAACuC,EAAD,CACHgG,UAAWA,EACX9F,UAAWA,EACX7B,UAAWA,EACX0B,WAAYA,EACZnC,gBAAiB,SAAC2K,EAASG,EAAUjL,EAAMkL,GAA1B,OAAoC/K,EAAgB2K,EAASG,EAAUjL,EAAMkL,IAC9F7K,SAAU,kBAAMA,KAChBqC,SAAU,kBAAMA,KAChBzC,aAAc,SAAC4J,GAAD,OAAWgB,EAAkBhB,MAEnD,KAAK,EACD,OAAO,kBAACjH,EAAD,CACHG,SAAU4F,EACV1F,cAAe,SAACH,GAAD,OAAaG,GAAcH,IAC1CzC,SAAU,kBAAMA,KAChBqC,SAAU,kBAAMA,KAChBzC,aAAc,kBAAM4K,OAE5B,KAAK,EACD,OAAO,kBAACrH,GAAD,CACHG,MAAOoF,EACPhF,aAAc8E,EACd7E,kBAAmB,SAACF,GAAD,OAAiBE,GAAkBF,IACtDF,WAAY,SAACF,GAAD,OAAUE,GAAWF,IACjCrD,SAAU,kBAAMA,KAChBqC,SAAU,kBAAMA,KAChBzC,aAAc,kBAAM4K,OAE5B,KAAK,EACD,OAAO,kBAACxG,GAAD,CACHtB,SAAU4F,EACV5E,aAAc8E,EACdlF,MAAOoF,EACPhE,aAAc,SAACmB,GAAD,OAAYnB,GAAamB,IACvCxD,SAAU,kBAAMA,KAChBwE,iBAAkB,kBAAMA,KACxBjH,aAAc,kBAAM4K,OAE5B,QACI,OAAO,kBAACpL,EAAD,CACHY,SAAU,kBAAMA,KAChBJ,aAAc,SAACD,GAAD,OAAU6K,EAAkB7K,OAOjDwL,IAKb,IAAM/N,GAAS,CACX6B,EAAG,CACC,MAAS,SAEbiM,iBAAkB,CACd,QAAW,OACX,cAAiB,SACjB,WAAc,SACd,eAAkB,SAClB,OAAU,OACV,aAAgB,QAChB,SAAY,S,oCElRL,SAASE,GAAW9M,GAE/B,OACI,kBAAC,KAAD,CACI+M,QAAS,CAACC,KAAeC,MACzBC,YAAY,WACZC,aAAc,CACVxC,MAAO3K,EAAM4J,UACbgB,IAAK5K,EAAMoN,SAEfC,cAAe,CACXC,KAAM,GACNC,OAAQ,QACRC,MAAO,IAEXC,OAAQzN,EAAMyN,OACdC,YAAY,EACZC,YAAY,aCpBxB3M,KAAK4M,UAAUC,QAAU,SAAUC,GAC/B,IAAIzM,EAAO,IAAIL,KAAK+M,KAAKC,WAEzB,OADA3M,EAAK4M,QAAQ5M,EAAK6M,UAAYJ,GACvBzM,GAGJ,IAAM8M,GAAe,SAAC7P,EAAM8P,GAI/B,IAHA,IAAIX,EAAS,GACTY,EAAeD,EAAQpL,KAAI,SAAAuE,GAAY,OAAOA,EAAO+G,gBAEhDjD,EAAI,EAAGA,EAAIkD,OAAOC,KAAKlQ,GAAMgN,OAAQD,IAAK,CAE/C,IAAIE,EAAajN,EAAK+M,GAEtB,OAAQA,GACJ,KAAK,EACD,IAAK,IAAIG,KAAYD,EACjB,GAAIC,IAAaD,EAAWC,GAAW,CACnC,IAAIiD,EAAgB,IAAIzN,KAAKwK,GACzBkD,EAAc,IAAI1N,KAAKuK,EAAWC,IAKlC3J,EAHY4M,EAAcZ,QAAQ,GAIlC9L,EAHU2M,EAAYb,QAAQ,GAI9Bc,EAAQ,CACR/O,MAAO,iBAAmByO,EAAaO,UAAW,EAClDjE,MAAO9I,EACP+I,IAAK7I,GAGT0L,EAAOzC,KAAK2D,GAGpB,MACJ,KAAK,EACD,IAAK,IAAInD,KAAYD,EACjB,GAAIC,IAAaD,EAAWC,GAAW,CACnC,IAAIiD,EAAgB,IAAIzN,KAAKwK,GACzBkD,EAAc,IAAI1N,KAAKuK,EAAWC,IAKlC3J,EAHY4M,EAAcZ,QAAQ,GAIlC9L,EAHU2M,EAAYb,QAAQ,GAI9Bc,EAAQ,CACR/O,MAAOyO,EAAaO,QACpBjE,MAAO9I,EACP+I,IAAK7I,GAET0L,EAAOzC,KAAK2D,GAGpB,MACJ,KAAK,EACD,IAAK,IAAInD,KAAYD,EACjB,GAAIC,IAAaD,EAAWC,GAAW,CACnC,IAAIiD,EAAgB,IAAIzN,KAAKwK,GACzBkD,EAAc,IAAI1N,KAAKuK,EAAWC,IAKlC3J,EAHY4M,EAAcZ,QAAQ,GAIlC9L,EAHU2M,EAAYb,QAAQ,GAI9Bc,EAAQ,CACR/O,MAAOyO,EAAaO,QACpBjE,MAAO9I,EACP+I,IAAK7I,GAET0L,EAAOzC,KAAK2D,GAGpB,MACJ,KAAK,EACD,IAAK,IAAInD,KAAYD,EACjB,GAAIC,IAAaD,EAAWC,GAAW,CACnC,IAAIiD,EAAgB,IAAIzN,KAAKwK,GACzBkD,EAAc,IAAI1N,KAAKuK,EAAWC,IAKlC3J,EAHY4M,EAAcZ,QAAQ,GAIlC9L,EAHU2M,EAAYb,QAAQ,GAI9Bc,EAAQ,CACR/O,MAAOyO,EAAaO,QACpBjE,MAAO9I,EACP+I,IAAK7I,GAET0L,EAAOzC,KAAK2D,GAGpB,MACJ,KAAK,EACD,IAAK,IAAInD,KAAYD,EACjB,GAAIC,IAAaD,EAAWC,GAAW,CACnC,IAAIiD,EAAgB,IAAIzN,KAAKwK,GACzBkD,EAAc,IAAI1N,KAAKuK,EAAWC,IAKlC3J,EAHY4M,EAAcZ,QAAQ,GAIlC9L,EAHU2M,EAAYb,QAAQ,GAI9Bc,EAAQ,CACR/O,MAAOyO,EAAaO,QACpBjE,MAAO9I,EACP+I,IAAK7I,GAET0L,EAAOzC,KAAK2D,GAGpB,MACJ,KAAK,EACD,IAAK,IAAInD,KAAYD,EACjB,GAAIC,IAAaD,EAAWC,GAAW,CACnC,IAAIiD,EAAgB,IAAIzN,KAAKwK,GACzBkD,EAAc,IAAI1N,KAAKuK,EAAWC,IAKlC3J,EAHY4M,EAAcZ,QAAQ,GAIlC9L,EAHU2M,EAAYb,QAAQ,GAI9Bc,EAAQ,CACR/O,MAAOyO,EAAaO,QACpBjE,MAAO9I,EACP+I,IAAK7I,GAET0L,EAAOzC,KAAK2D,GAGpB,MACJ,KAAK,EACD,IAAK,IAAInD,KAAYD,EACjB,GAAIC,IAAaD,EAAWC,GAAW,CACnC,IAAIiD,EAAgB,IAAIzN,KAAKwK,GACzBkD,EAAc,IAAI1N,KAAKuK,EAAWC,IAKlC3J,EAHY4M,EAAcZ,QAAQ,GAIlC9L,EAHU2M,EAAYb,QAAQ,GAI9Bc,EAAQ,CACR/O,MAAOyO,EAAaO,QACpBjE,MAAO9I,EACP+I,IAAK7I,GAET0L,EAAOzC,KAAK2D,GAGpB,MACJ,KAAK,EACD,IAAK,IAAInD,KAAYD,EACjB,GAAIC,IAAaD,EAAWC,GAAW,CACnC,IAAIiD,EAAgB,IAAIzN,KAAKwK,GACzBkD,EAAc,IAAI1N,KAAKuK,EAAWC,IAKlC3J,EAHY4M,EAAcZ,QAAQ,GAIlC9L,EAHU2M,EAAYb,QAAQ,GAI9Bc,EAAQ,CACR/O,MAAOyO,EAAaO,QACpBjE,MAAO9I,EACP+I,IAAK7I,GAET0L,EAAOzC,KAAK2D,KAMhC,OAAOlB,GC7KI,SAASoB,KAAQ,IAAD,EAES9N,oBAAS,GAFlB,mBAEpB+N,EAFoB,KAERC,EAFQ,OAGKhO,mBAAS,MAHd,mBAGpBiO,EAHoB,KAGVC,EAHU,KAKrBhE,EAAWiE,eAAXjE,OAEAkE,EAAqB,uCAAG,WAAO7Q,GAAP,2BAAAqN,EAAA,2DACtBqD,EAASlG,YAAYwC,OAAS,GADR,iDAItB8D,EAAkB,IAAIC,IAJA,cAMP/Q,GANO,IAM1B,2BAAyB,CAAhBiJ,EAAgB,sBACElB,KAAKC,MAAMiB,EAAO+H,qBADpB,IACrB,2BAASC,EAAqD,QAC1DH,EAAgBvE,IAAI0E,EAAWC,MAFd,gCANC,8CAYpBP,EAAY,6BACXD,GADU,IAEblG,YAAa2G,MAAMC,KAAKN,MAdF,OAiB1BL,GAAc,GAjBY,2CAAH,sDAwC3B,OApBAzO,qBAAU,WHdP,IAAwBjB,KGeR4L,EHdZtN,EAAmBM,IAAI,gBAAkBoB,GAAInB,MAAK,SAACC,GAAD,MAAU,CAAEC,SAAS,EAAMC,QAAS,mBAAoBC,KAAMH,EAAIG,SAASC,OAAM,SAACJ,GAAD,MAAU,CAAEC,SAAS,EAAOC,QAASF,EAAKG,KAAMH,OGc/JD,MAAK,SAACC,GACzB8Q,EAAY,CACR5P,GAAIlB,EAAIG,KAAKe,GACb2K,aAAc3D,KAAKC,MAAMnI,EAAIG,KAAK0L,cAClClG,UAAWuC,KAAKC,MAAMnI,EAAIG,KAAKwF,WAC/B7B,UAAWoE,KAAKC,MAAMnI,EAAIG,KAAK2D,WAC/BmM,QAASjQ,EAAIG,KAAK8P,QAClBtF,YAAa,UAGtB,IAEHxI,qBAAU,WACW,OAAb0O,GACAG,EAAsBH,EAASZ,WAEpC,CAACY,IAGAF,GAAcE,EAEV,kBAACvO,EAAA,EAAD,CAAW5B,MAAOC,GAAO4B,eACrB,wBAAI7B,MAAOC,GAAO6Q,YAAlB,cAA0CX,EAAS3P,IAElD8O,GAAaa,EAAS/M,UAAW+M,EAASZ,SAAS9C,OAAS,EACzD,kBAAC7K,EAAA,EAAD,CAAW5B,MAAOC,GAAO8Q,mBACrB,kBAAE,GAAF,CAAWhG,UAAWoF,EAASlL,UAAU,GAAIsJ,QAAS,IAAIpM,KAAKgO,EAASlL,UAAU,IAAI+J,QAAQ,GAAIJ,OAAQU,GAAaa,EAAS/M,UAAW+M,EAASZ,YAExJ,KAEJ,kBAAC3N,EAAA,EAAD,CAAW5B,MAAOC,GAAO8N,kBACrB,kBAACnM,EAAA,EAAD,CAAW5B,MAAOC,GAAO+Q,oBACrB,wBAAIhR,MAAOC,GAAOgR,YAAlB,uBACA,kBAACrP,EAAA,EAAD,CAAW5B,MAAOC,GAAOiR,oBACpBf,EAASZ,QAAQpL,KAAI,SAACuE,EAAQyI,GAC3B,OAAO,kBAACxI,GAAA,EAAD,CAAM3I,MAAOC,GAAO2I,WAAYC,IAAKsI,GACxC,kBAACxI,GAAA,EAAKG,IAAN,CAAUlI,QAAQ,MAAMmI,IAAKL,EAAO0I,eACpC,kBAACzI,GAAA,EAAKM,KAAN,KACI,kBAACN,GAAA,EAAKO,MAAN,KAAaR,EAAO+G,cACpB,kBAAC9G,GAAA,EAAKQ,KAAN,kBAAsB3B,KAAKC,MAAMiB,EAAO2I,iBAAiBxJ,KAAK,OAC9D,kBAACc,GAAA,EAAKQ,KAAN,oBAAwBT,EAAO4I,kBAA/B,YACA,kBAAC3I,GAAA,EAAKQ,KAAN,KAAY,uBAAGzC,KAAMgC,EAAO6I,YAAalK,OAAO,SAASiC,IAAI,uBAAjD,0BAOhC,kBAACX,GAAA,EAAD,KACI,kBAACA,GAAA,EAAKM,KAAN,KACI,kBAACN,GAAA,EAAKO,MAAN,sBAEIiH,EAASlG,YAAYwC,OAAS,EAC1B0D,EAASlG,YAAY9F,KAAI,SAACuM,EAAYS,GAClC,OAAO,uBAAGtI,IAAKsI,GAAQT,MAEvB,wDAa5B,kBAAC9O,EAAA,EAAD,CAAW5B,MAAOC,GAAO4B,eACrB,iDAMhB,IAAM5B,GAAS,CACX6B,EAAG,CACC,UAAa,SACb,MAAS,SAEbD,cAAe,CACX,QAAW,OACX,cAAiB,SACjB,WAAc,SACd,eAAkB,SAClB,WAAc,UACd,QAAW,MACX,QAAW,YACX,cAAiB,OACjB,WAAc,QAGlBkP,kBAAmB,CACf,OAAU,OACV,QAAW,OACX,WAAc,qBACd,QAAW,OAEfhD,iBAAkB,CACd,QAAW,QAEfnF,WAAY,CACR,QAAW,OACX,OAAU,OACV,MAAS,OAEboI,mBAAoB,CAChB,QAAW,OACX,SAAY,OACZ,eAAkB,SAClB,OAAU,MAEdE,mBAAoB,CAChB,QAAW,OACX,YAAa,OACb,cAAiB,MACjB,eAAkB,eAClB,SAAY,QAEhBD,WAAY,CACR,WAAc,UACd,QAAW,MACX,QAAW,WACX,QAAW,eACX,aAAgB,OAChB,OAAU,MACV,MAAS,SAEbH,WAAY,CACR,WAAc,UACd,QAAW,MACX,QAAW,WACX,QAAW,eACX,aAAgB,OAChB,aAAgB,OAChB,MAAS,QACT,UAAa,UAEjBU,YAAa,CACT,OAAU,MACV,aAAc,WC1KP,SAASvD,KACtB,OACE,kBAAC,KAAD,CACEC,QAAS,CAACC,KAAeC,MACzBC,YAAY,WACZC,aAAc,CACZxC,MAAO,aACPC,IAAK,cAEPyC,cAAe,CACbC,KAAM,GACNC,OAAQ,QACRC,MAAO,MCXA,SAAS8C,KAAY,IAAD,EAELvP,mBAAS,MAFJ,mBAExBwP,EAFwB,KAEjBC,EAFiB,KAGzB1S,EAAOC,qBAAWjB,GAexB,OAbAwD,qBAAU,WLYP,IAA0BjB,KKXRvB,EAAKZ,KLYnBS,EAAmBM,IAAI,cAAgBoB,GAAInB,MAAK,SAACC,GAAD,MAAU,CAAEC,SAAS,EAAMC,QAAS,mCAAoCC,KAAMH,EAAIG,SAASC,OAAM,SAACJ,GAAD,MAAU,CAAEC,SAAS,EAAOC,QAASF,EAAKG,KAAMH,OKZxKD,MAAK,SAACC,GAC9BoC,QAAQC,IAAI,mCAAoCrC,GACxB,IAApBA,EAAIG,KAAKgN,OACTkF,GAAS,GAGTA,EAASrS,EAAIG,WAGtB,IAGW,OAAViS,EAEI,kBAAC9P,EAAA,EAAD,CAAW5B,MAAOC,GAAO4B,eACrB,mDAKE,IAAV6P,EAEI,kBAAC9P,EAAA,EAAD,CAAW5B,MAAOC,GAAO4B,eACrB,0EAMR,kBAACD,EAAA,EAAD,CAAW5B,MAAOC,GAAO4B,eACrB,uBAAG7B,MAAOC,GAAO6B,GAAjB,yDACC4P,EAAMvN,KAAI,SAACyN,EAAMT,GAAY,OAAO,kBAAC,UAAD,CAAShR,GAAI,gBAAkByR,EAAKpR,IAAI,uBAAGqI,IAAKsI,GAAR,yBAAsCS,EAAKpR,GAA3C,UAAsDgH,KAAKC,MAAMmK,EAAK3M,WAAW,GAAjF,OAAyFuC,KAAKC,MAAMmK,EAAK3M,WAAW,SAK7M,IAAMhF,GAAS,CACX6B,EAAG,CACC,UAAa,SACb,MAAS,SAEbD,cAAe,CACX,QAAW,OACX,cAAiB,SACjB,WAAc,SACd,eAAkB,SAClB,OAAU,U,UCrDH,SAASgQ,GAAM1Q,GAG1B,IAHiC,EAKmBe,oBAAS,GAL5B,mBAK1B4P,EAL0B,KAKNC,EALM,OAMP7P,mBAAS,IANF,mBAM1B8P,EAN0B,KAMnBC,EANmB,OAOD/P,mBAAS,IAPR,mBAO1BgQ,EAP0B,KAOhBC,EAPgB,KAS3BlT,EAAOC,qBAAWjB,GAoBxB,OAAI6T,EACO,kBAAC,KAAD,CAAU3R,GA3BR,CAAE0Q,KAAM,CAAEuB,SAAU,QA8B9BnT,EAAKb,SACG,kBAAC,KAAD,CAAU+B,GAAG,MAIpB,kBAACyB,EAAA,EAAD,CAAW7B,UAAU,QAAQC,MAAOC,GAAO4B,eACvC,kBAACwQ,GAAA,EAAD,CAAMC,SAxBO,SAACxC,GAClBA,EAAMlN,iBpBpBP,SAAe2P,EAAUL,GAC5B,OAAOtT,EAAkBuL,KAAK,SAAU,CACpCoI,WACAL,aACD7S,MAAK,SAACC,GAAD,MAAU,CAAEC,SAAS,EAAMC,QAAS,mBAAoBC,KAAMH,EAAIG,SAASC,OAAM,SAACJ,GAAD,MAAU,CAAEC,SAAS,EAAOC,QAASF,EAAKG,KAAMH,MoBiBrIkT,CAAMR,EAAOE,GAAU7S,KAAvB,uCAA4B,WAAOC,GAAP,SAAAwN,EAAA,yDACnBxN,EAAIC,QADe,gBAEpBkT,MAAM,8CAFc,6BAKpB/Q,QAAQC,IAAI,eALQ,SAMd1C,EAAKX,YAAYgB,GANH,OAOpByS,GAAsB,GAPF,2CAA5B,yDAuBQ,kBAACM,GAAA,EAAKK,MAAN,CAAYC,UAAU,QAAQC,OAAO,SACjC,kBAACP,GAAA,EAAKQ,MAAN,cACA,kBAACR,GAAA,EAAKS,QAAN,CACIC,WAAS,EACTC,KAAK,QACL5O,MAAO4N,EACPzP,SAAU,SAAAP,GAAC,OAAIiQ,EAASjQ,EAAEqF,OAAOjD,WAGzC,kBAACiO,GAAA,EAAKK,MAAN,CAAYC,UAAU,WAAWC,OAAO,SACpC,kBAACP,GAAA,EAAKQ,MAAN,iBACA,kBAACR,GAAA,EAAKS,QAAN,CACI1O,MAAO8N,EACP3P,SAAU,SAAAP,GAAC,OAAImQ,EAAYnQ,EAAEqF,OAAOjD,QACpC4O,KAAK,cAGb,kBAACrS,EAAA,EAAD,CAAQU,OAAK,EAACuR,OAAO,QAAQK,WA7C9BjB,EAAMvF,OAAS,GAAKyF,EAASzF,OAAS,GA6CmBuG,KAAK,UAA7D,WAQhB,IAAM/S,GAAS,CACX6B,EAAG,CACC,UAAa,SACb,MAAS,SAEbD,cAAe,CACX,QAAW,OACX,cAAiB,SACjB,WAAc,SACd,eAAkB,SAClB,OAAU,UC3EH,SAASqR,GAAO/R,GAE3B,IAFkC,EAIkBe,oBAAS,GAJ3B,mBAI3B4P,EAJ2B,KAIPC,EAJO,OAKR7P,mBAAS,IALD,mBAK3B8P,EAL2B,KAKpBC,EALoB,OAMF/P,mBAAS,IANP,mBAM3BgQ,EAN2B,KAMjBC,EANiB,OAOQjQ,mBAAS,IAPjB,mBAO3BiR,EAP2B,KAOZC,EAPY,KAS5BnU,EAAOC,qBAAWjB,GA2BxB,OAAI6T,EACO,kBAAC,KAAD,CAAU3R,GAnCR,CAAE0Q,KAAM,CAAEuB,SAAU,QAsC9BnT,EAAKb,SACG,kBAAC,KAAD,CAAU+B,GAAG,MAIpB,kBAACyB,EAAA,EAAD,CAAW7B,UAAU,SAASC,MAAOC,GAAO4B,eACxC,kBAACwQ,GAAA,EAAD,CAAMC,SA/BO,SAACxC,GAElB,GADAA,EAAMlN,iBACFsP,IAAaiB,EAIb,OAHAV,MAAM,wBACNN,EAAY,IACZiB,EAAiB,KACV,GrBlBZ,SAAgBb,EAAUL,GAC7B,OAAOtT,EAAkBuL,KAAK,UAAW,CACrCoI,WACAL,aACD7S,MAAK,SAACC,GAAD,MAAU,CAAEC,SAAS,EAAMC,QAAS,oBAAqBC,KAAMH,EAAIG,SAASC,OAAM,SAACJ,GAAD,MAAU,CAAEC,SAAS,EAAOC,QAASF,EAAKG,KAAMH,OqBiBtI+T,CAAOrB,EAAOE,GAAU7S,KAAxB,uCAA6B,WAAOC,GAAP,SAAAwN,EAAA,yDACpBxN,EAAIC,QADgB,gBAErBkT,MAAM,+CAFe,6BAKrB/Q,QAAQC,IAAI,oCALS,SAMf1C,EAAKX,YAAYgB,GANF,OAOrByS,GAAsB,GAPD,2CAA7B,yDAuBQ,kBAACM,GAAA,EAAKK,MAAN,CAAYC,UAAU,QAAQC,OAAO,SACjC,kBAACP,GAAA,EAAKQ,MAAN,cACA,kBAACR,GAAA,EAAKS,QAAN,CACIC,WAAS,EACTC,KAAK,QACL5O,MAAO4N,EACPzP,SAAU,SAAAP,GAAC,OAAIiQ,EAASjQ,EAAEqF,OAAOjD,WAGzC,kBAACiO,GAAA,EAAKK,MAAN,CAAYE,OAAO,SACf,kBAACP,GAAA,EAAKQ,MAAN,iBACA,kBAACR,GAAA,EAAKS,QAAN,CACI1O,MAAO8N,EACP3P,SAAU,SAAAP,GAAC,OAAImQ,EAAYnQ,EAAEqF,OAAOjD,QACpC4O,KAAK,aAET,kBAACX,GAAA,EAAKQ,MAAN,0BACA,kBAACR,GAAA,EAAKS,QAAN,CACI1O,MAAO+O,EACP5Q,SAAU,SAAAP,GAAC,OAAIoR,EAAiBpR,EAAEqF,OAAOjD,QACzC4O,KAAK,cAGb,kBAACrS,EAAA,EAAD,CAAQU,OAAK,EAACuR,OAAO,QAAQK,WA1D7BjB,EAAMvF,OAAS,GAAKyF,EAASzF,OAAS,GA0DkBuG,KAAK,UAA7D,YAQhB,IAAM/S,GAAS,CACX6B,EAAG,CACC,UAAa,SACb,MAAS,SAEbD,cAAe,CACX,QAAW,OACX,cAAiB,SACjB,WAAc,SACd,eAAkB,SAClB,OAAU,UC3FH,SAASyR,KAEpB,OACI,kBAAC1R,EAAA,EAAD,CAAW5B,MAAOC,GAAO4B,eACrB,uBAAG7B,MAAOC,GAAO6B,GAAjB,iCAKZ,IAAM7B,GAAS,CACX6B,EAAG,CACC,UAAa,SACb,MAAS,SAEbD,cAAe,CACX,QAAW,OACX,cAAiB,SACjB,WAAc,SACd,eAAkB,SAClB,OAAU,U,UClBL0R,GAAe,SAAC,GAAuC,IAA1BC,EAAyB,EAApCC,UAAyBC,EAAW,8BAEzDzU,EAAOC,qBAAWjB,GAExB,OACE,kBAAC,KAAD,iBACMyV,EADN,CAEEC,OAAQ,SAAAxS,GAAK,OACXlC,EAAKb,SACH,kBAACoV,EAAcrS,GAEb,kBAAC,KAAD,CACEhB,GAAI,CAAEiS,SAAU,SAAUwB,MAAO,CAAE/C,KAAM1P,EAAM0S,kBCAhD,SAASC,KAAO,IAAD,EAEI5R,oBAAS,GAFb,mBAErB9D,EAFqB,KAEX2V,EAFW,OAGJ7R,mBAAS,MAHL,mBAGrB7D,EAHqB,KAGf2V,EAHe,KAK5BvS,qBAAU,WAGHrD,IACHsD,QAAQC,IAAI,uBxBRP/C,EAAkBQ,IAAI,YACxBC,MAAK,SAACC,GAAD,MAAU,CAAEC,SAAS,EAAMC,QAAS,gBAAiBC,KAAMH,EAAIG,SAASC,OAAM,SAACJ,GAAD,MAAU,CAAEC,SAAS,EAAOC,QAASF,EAAKG,KAAMH,MwBQvHD,MAAK,SAACC,GACnBoC,QAAQC,IAAI,gCAAiCrC,GAGxCA,EAAIC,SAMPmC,QAAQC,IAAI,6BACZoS,GAAY,GACZC,EAAQ1U,EAAIG,OAPZiC,QAAQC,IAAI,yCAWjB,CAACvD,IAEJ,IAAME,EAAW,uCAAG,WAAOgB,GAAP,SAAAwN,EAAA,6DAClBpL,QAAQC,IAAI,+BACZD,QAAQC,IAAIrC,GACZ0U,EAAQ1U,EAAIG,MAHM,SAIZsU,EAAYzU,EAAIC,SAJJ,2CAAH,sDAOjB,OACE,kBAACtB,EAAYgW,SAAb,CAAsB7P,MAAO,CAAEhG,SAAUA,EAAUC,KAAMA,EAAMC,YAAaA,IAC1E,kBAAC,gBAAD,KACE,kBAACsD,EAAA,EAAD,KACE,kBAAC5C,EAAD,MACA,kBAAC,KAAD,KAEE,kBAAC,GAAD,CAAckV,OAAK,EAACC,KAAK,IAAIV,UAAWjS,IACxC,kBAAC,GAAD,CAAc2S,KAAK,OAAOV,UAAWhC,KACrC,kBAAC,GAAD,CAAc0C,KAAK,UAAUV,UAAW3I,KACxC,kBAAC,GAAD,CAAcqJ,KAAK,uBAAuBV,UAAWW,KAGrD,kBAAC,KAAD,CAAOF,OAAK,EAACC,KAAK,SAASV,UAAW5B,KACtC,kBAAC,KAAD,CAAOqC,OAAK,EAACC,KAAK,UAAUV,UAAWP,KACvC,kBAAC,KAAD,CAAOiB,KAAK,YAAYV,UAAWH,KACnC,kBAAC,KAAD,CAAOa,KAAK,UAAUV,UAAWxF,SCvDzBoG,QACW,cAA7BC,OAAOT,SAASU,UAEe,UAA7BD,OAAOT,SAASU,UAEhBD,OAAOT,SAASU,SAASC,MACvB,2D,OCTNC,IAASd,OACP,kBAAC,IAAMe,WAAP,KACE,kBAACZ,GAAD,OAEFa,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1V,MAAK,SAAA2V,GACJA,EAAaC,gBAEdvV,OAAM,SAAAwV,GACLxT,QAAQwT,MAAMA,EAAM1V,a","file":"static/js/main.d7baa7c6.chunk.js","sourcesContent":["import React from 'react'\n\nexport const AuthContext = React.createContext({\n    loggedIn: false, \n    user: {},\n    handleLogin: ()=>{},\n})","import axios from 'axios';\n\nexport const axiosFoodInstance = axios.create({\n    baseURL: \"https://api.spoonacular.com/recipes/complexSearch\",\n    timeout: 50000,\n});\n\n//TODO: configure dev environment to auto pull correct axios url for requests\nexport const axiosAuthInstance = axios.create({\n    // baseURL: \"http://localhost:8080/api/auth\",\n    baseURL: \"http://localhost:3000/api/auth\",\n    timeout: 50000,\n    withCredentials: true\n});\n\nexport const axiosPlansInstance = axios.create({\n    // baseURL: \"http://localhost:8080/api/plans\",\n    baseURL: \"http://localhost:3000/api/plans\",\n    timeout: 50000,\n});\n\nexport const axiosRecipesInstance = axios.create({\n    // baseURL: \"http://localhost:8080/api/recipes\",\n    baseURL: \"http://localhost:3000/api/recipes\",\n    timeout: 50000,\n});","import React, { useContext } from 'react'\nimport { Navbar, Nav, NavDropdown, Button } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { AuthContext } from '../AuthContext'\nimport { logout } from '../api/authentication'\n\nexport default function Header() {\n\n    const auth = useContext(AuthContext)\n\n    const handleLogout = () => {\n        logout()\n            .then((res) => {\n                auth.handleLogin(res.success)\n            })\n    }\n\n    //IF USER IS LOGGED IN\n    if (auth.loggedIn) {\n        return (\n            <Navbar collapseOnSelect bg=\"light\" expand=\"lg\" className='navbar' style={styles.navbar}>\n                <LinkContainer to=\"/\">\n                    <Navbar.Brand>Preppy</Navbar.Brand>\n                </LinkContainer >\n\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"ml-auto\">\n                        <LinkContainer to=\"/\">\n                            <Nav.Link>Create Plan</Nav.Link>\n                        </LinkContainer >\n                        <LinkContainer to=\"/all\">\n                            <Nav.Link>View All Plans</Nav.Link>\n                        </LinkContainer >\n                        <Button variant=\"outline-primary\" onClick={() => handleLogout()}>Logout</Button >\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar >\n        )\n    }\n\n    //USER NOT LOGGED IN\n    return (\n        <Navbar bg=\"light\" expand=\"lg\" className='navbar' style={styles.navbar}>\n            <LinkContainer to=\"/home\">\n                <Navbar.Brand>Preppy</Navbar.Brand>\n            </LinkContainer >\n\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"ml-auto\">\n                    {/* TODO: Reinstate the sample plan page */}\n                    {/* <LinkContainer to=\"/sample\">\n                        <Nav.Link>View Sample Plan</Nav.Link>\n                    </LinkContainer > */}\n                    <NavDropdown title=\"Account\" id=\"basic-nav-dropdown\">\n                        <LinkContainer to=\"/login\">\n                            <NavDropdown.Item>Login</NavDropdown.Item>\n                        </LinkContainer >\n                        <LinkContainer to=\"/signup\">\n                            <NavDropdown.Item>Sign Up</NavDropdown.Item>\n                        </LinkContainer >\n                        <NavDropdown.Divider />\n                        {/* TODO: implement feature to allow user to change password */}\n                        {/* <LinkContainer to=\"/password\">\n                            <NavDropdown.Item>Forgot Password?</NavDropdown.Item>\n                        </LinkContainer > */}\n                    </NavDropdown>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar >\n    )\n}\n\nconst styles = {\n    navbar: {\n        'opacity': '.9',\n        'background': '#EDF5FC'\n    }\n}","import { axiosAuthInstance } from '../config/axios'\n\nexport function login(username, password) {\n    return axiosAuthInstance.post('/login', {\n        username,\n        password,\n    }).then((res) => ({ success: true, message: 'Successful Login', data: res.data })).catch((res) => ({ success: false, message: res, data: res }))\n}\n\nexport function signup(username, password) {\n    return axiosAuthInstance.post('/signup', {\n        username,\n        password,\n    }).then((res) => ({ success: true, message: 'Successful Signup', data: res.data })).catch((res) => ({ success: false, message: res, data: res }))\n}\n\nexport function checkSession() {\n    return axiosAuthInstance.get('/session')\n        .then((res) => ({ success: true, message: 'Valid Session', data: res.data })).catch((res) => ({ success: false, message: res, data: res }))\n}\n\nexport function logout() {\n    return axiosAuthInstance.get('/logout')\n        .then((res) => ({ success: true, message: 'Logged out Successfully', data: res.data })).catch((res) => ({ success: false, message: res, data: res }))\n}","import React from 'react';\nimport Button from 'react-bootstrap/Button'\n\nexport default function BigButton(props) {\n    return (\n    <Button variant=\"primary\" size=\"lg\" block style={styles.createButton}>{props.text}</Button>\n    );\n}\n\nconst styles ={\n    createButton: {\n        'width': '100%'\n    }\n}","import React, {useContext, useEffect} from 'react';\nimport { Container } from 'react-bootstrap'\nimport BigButton from '../components/BigButton'\nimport { NavLink } from 'react-router-dom'\nimport { AuthContext } from '../AuthContext'\n\n\nexport default function Main() {\n\n    const auth = useContext(AuthContext)\n\n    useEffect(()=>{\n        console.log('this is our current user: ', auth.user)\n    }, [auth.user])\n\n    return (\n        <Container style={styles.formContainer}>\n            <p style={styles.p}>Hello, welcome to Prepper. This tool will let you select the recipes that you'd like to cook throughout the week, and generate a  prep plan for you based on your availablity each day.</p>\n            <p style={styles.p}>Click 'Create Plan' to start creating your perfect meal plan.</p>\n            <NavLink to=\"/create\"><BigButton text=\"Create Plan\"></BigButton></NavLink>\n        </Container>\n    );\n}\n\nconst styles = {\n    p: {\n        'textAlign': 'center',\n        'color': 'white'\n    },\n    formContainer: {\n        'display': 'flex',\n        'flexDirection': 'column',\n        'alignItems': 'center',\n        'justifyContent': 'center',\n        'height': '400px'\n    }\n}","import React from 'react';\nimport Button from 'react-bootstrap/Button'\n\nexport default function SmallButton(props) {\n\n    // const saveAndSubmit = () =>{\n    //     console.log('clicked')\n    //     // e.preventDefault()\n    //     // props.nextStep()\n    // }\n\n    return (\n    <Button variant=\"primary\" size=\"sm\" block \n    onClick={(e)=>props.onClick(e)}\n    style={styles.createButton}>{props.text}</Button>\n    );\n}\n\nconst styles ={\n    createButton: {\n        'width': '15%',\n        'margin': '15px'\n    }\n}","import React, { useState } from 'react';\nimport { Container } from 'react-bootstrap'\nimport DatePicker from 'react-datepicker'\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport SmallButton from '../../components/SmallButton'\n\nexport default function PlanStart(props) {\n\n    const [currentDate, setCurrentDate] = useState(new Date())\n\n    const handleDateSelect = (date) => {\n        setCurrentDate(date)\n        props.handleChange(date)\n    }\n\n    const saveAndSubmit = (e) => {\n        e.preventDefault()\n        props.nextStep()\n    }\n\n    return (\n        <Container style={styles.formContainer}>\n            <p style={styles.p}>Select a start date for your plan:</p>\n            {/* TODO: Consider using inline version: https://reactdatepicker.com/*/}\n            <DatePicker selected={currentDate} onChange={(date) => handleDateSelect(date)} updateTimeBoxes={props.updateTimeBoxes} />\n            <SmallButton text=\"Next\" onClick={(e) => { saveAndSubmit(e) }}></SmallButton>\n        </Container>\n    );\n}\n\nconst styles = {\n    p: {\n        'textAlign': 'center',\n        'color': 'white'\n    },\n    formContainer: {\n        'display': 'flex',\n        'flexDirection': 'column',\n        'alignItems': 'center',\n        'justifyContent': 'center',\n        'height': '400px'\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { Container } from 'react-bootstrap'\nimport DatePicker from 'react-datepicker'\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default function TimeRange(props) {\n\n    const [startTime, setStartTime] = useState(props.startTime)\n    const [endTime, setEndTime] = useState(props.endTime)\n\n    const changeStartTime = (date) => {\n        props.updateTimeBoxes(props.dayIndex, props.timeIndex, date, 0)\n        setStartTime(date)\n    }\n\n    const changeEndTime = (date) => {\n        props.updateTimeBoxes(props.dayIndex, props.timeIndex, date, 1)\n        setEndTime(date)\n    }\n\n    useEffect(() => {\n        setStartTime(props.planTimes[props.dayIndex][props.timeIndex][0])\n        setEndTime(props.planTimes[props.dayIndex][props.timeIndex][1])\n    }, [props.planTimes, props.dayIndex, props.timeIndex])\n\n    return (\n        <Container style={styles.timeContainer}>\n            <DatePicker\n                selected={startTime}\n                onChange={date => changeStartTime(date)}\n                showTimeSelect\n                showTimeSelectOnly\n                timeIntervals={15}\n                timeCaption=\"Time\"\n                dateFormat=\"h:mm aa\"\n            />\n            <h5 style={{ 'color': 'black', 'margin': '10px' }}>to</h5>\n            <DatePicker\n                selected={endTime}\n                onChange={date => changeEndTime(date)}\n                showTimeSelect\n                showTimeSelectOnly\n                timeIntervals={15}\n                timeCaption=\"Time\"\n                dateFormat=\"h:mm aa\"\n            />\n        </Container>\n    );\n}\n\nconst styles = {\n    timeContainer: {\n        'display': 'flex',\n        'flexDirection': 'row',\n        'alignItems': 'center',\n        'justifyContent': 'center',\n    },\n}","import React from 'react';\nimport { Container } from 'react-bootstrap'\nimport moment from 'moment';\nimport { ArrowRightSquareFill, ArrowLeftSquareFill } from 'react-bootstrap-icons'\nimport TimeRange from './TimeRange'\nimport { Button } from 'react-bootstrap'\n\nexport default function DateTimePicker(props) {\n\n    let currentTimeBlocks = props.planTimes[props.step]\n\n    const addTimeBox = () => {\n        props.addTimeBox(props.step)\n    }\n\n    const mapTimes = currentTimeBlocks.map((value, timeIndex) => {\n        return (<TimeRange startTime={currentTimeBlocks[timeIndex][0]} endTime={currentTimeBlocks[timeIndex][1]} dayIndex={props.step} timeIndex={timeIndex} planTimes={props.planTimes}\n            updateTimeBoxes={props.updateTimeBoxes}\n        />)\n    })\n\n    return (\n        <Container style={styles.formContainer}>\n            <Container style={styles.topContainer}>\n                {props.step === 0 ? (\n                    <Button style={styles.iconButton} variant=\"link\">\n                        <ArrowLeftSquareFill style={{ opacity: 0 }} />\n                    </Button>\n\n                ) : (\n                        <Button style={styles.iconButton} variant=\"link\">\n                            <ArrowLeftSquareFill style={styles.iconLeft} onClick={props.prevDayStep} />\n                        </Button>\n                    )}\n                <p style={styles.pNoBottom}>{moment(props.date).format('dddd,  LL')}</p>\n                {props.step === 6 ? (\n                    <Button style={styles.iconButton} variant=\"link\">\n                        <ArrowRightSquareFill style={{ opacity: 0 }} />\n                    </Button>\n\n                ) : (\n                        <Button style={styles.iconButton} variant=\"link\">\n                            <ArrowRightSquareFill style={styles.iconRight} onClick={props.nextStep} />\n                        </Button>\n                    )}\n            </Container>\n            {mapTimes}\n            <Button style={styles.iconButton} variant=\"link\" onClick={() => addTimeBox()}>\n                <h5>+</h5>\n            </Button>\n        </Container>\n    );\n}\n\nconst styles = {\n    pNoBottom: {\n        'textAlign': 'center',\n        'color': 'black',\n        'margin': '0',\n        'fontWeight': 'bold'\n    },\n    formContainer: {\n        'display': 'flex',\n        'flexDirection': 'column',\n        'alignItems': 'center',\n        'justifyContent': 'center',\n    },\n    iconButton: {\n        'color': 'black',\n        'textDecoration': 'none',\n    },\n    iconLeft: {\n        'margin': '10px',\n        'fontSize': '20px',\n        'width': '20px'\n    },\n    iconRight: {\n        'margin': '10px',\n        'fontSize': '20px',\n        'width': '20px'\n    },\n    topContainer: {\n        'display': 'flex',\n        'flexDirection': 'row',\n        'alignItems': 'center',\n        'justifyContent': 'center',\n    },\n}","import React, { useState } from 'react';\nimport { Container } from 'react-bootstrap'\nimport SmallButton from '../../components/SmallButton'\nimport DateTimePicker from '../../components/DateTimePicker'\n\nexport default function PlanTimes(props) {\n\n    let [step, setStep] = useState(0)\n\n    const nextStep = () => {\n        setStep(step = step + 1)\n    }\n\n    const prevDayStep = () => {\n        setStep(step = step - 1)\n    }\n\n    const saveAndSubmit = (e) => {\n        e.preventDefault()\n        props.nextStep()\n    }\n\n    const planDays = () => {\n        switch (step) {\n            case 0:\n                return <DateTimePicker\n                    nextStep={() => nextStep()}\n                    date={props.planDates[step]}\n                    planTimes={props.planTimes}\n                    addTimeBox={props.addTimeBox}\n                    updateTimeBoxes={props.updateTimeBoxes}\n                    step={step}\n                />\n\n            case 1:\n                return <DateTimePicker\n                    nextStep={() => nextStep()}\n                    prevDayStep={() => prevDayStep()}\n                    prevStep={() => props.prevStep()}\n                    date={props.planDates[step]}\n                    planTimes={props.planTimes}\n                    addTimeBox={props.addTimeBox}\n                    updateTimeBoxes={props.updateTimeBoxes}\n                    step={step}\n                />\n\n\n            case 2:\n                return <DateTimePicker\n                    nextStep={() => nextStep()}\n                    prevDayStep={() => prevDayStep()}\n                    date={props.planDates[step]}\n                    planTimes={props.planTimes}\n                    addTimeBox={props.addTimeBox}\n                    updateTimeBoxes={props.updateTimeBoxes}\n                    step={step}\n                />\n\n            case 3:\n                return <DateTimePicker\n                    nextStep={() => nextStep()}\n                    prevDayStep={() => prevDayStep()}\n                    date={props.planDates[step]}\n                    planTimes={props.planTimes}\n                    addTimeBox={props.addTimeBox}\n                    updateTimeBoxes={props.updateTimeBoxes}\n                    step={step}\n                />\n\n            case 4:\n                return <DateTimePicker\n                    nextStep={() => nextStep()}\n                    prevDayStep={() => prevDayStep()}\n                    date={props.planDates[step]}\n                    planTimes={props.planTimes}\n                    addTimeBox={props.addTimeBox}\n                    updateTimeBoxes={props.updateTimeBoxes}\n                    step={step}\n                />\n\n            case 5:\n                return <DateTimePicker\n                    nextStep={() => nextStep()}\n                    prevDayStep={() => prevDayStep()}\n                    date={props.planDates[step]}\n                    planTimes={props.planTimes}\n                    addTimeBox={props.addTimeBox}\n                    updateTimeBoxes={props.updateTimeBoxes}\n                    step={step}\n                />\n\n            case 6:\n                return <DateTimePicker\n                    prevDayStep={() => prevDayStep()}\n                    date={props.planDates[step]}\n                    planTimes={props.planTimes}\n                    addTimeBox={props.addTimeBox}\n                    updateTimeBoxes={props.updateTimeBoxes}\n                    step={step}\n                />\n            default:\n                return <DateTimePicker\n                    nextStep={() => nextStep()}\n                    date={props.planDates[step]}\n                    planTimes={props.planTimes}\n                    addTimeBox={props.addTimeBox}\n                    updateTimeBoxes={props.updateTimeBoxes}\n                    step={step}\n                />\n        }\n    }\n\n    return (\n        <Container style={styles.formContainer}>\n            <p style={styles.p}>Select the times you are available to cook for each day of your plan:</p>\n\n            {planDays()}\n            <SmallButton text=\"Back\" onClick={() => { props.prevStep() }}></SmallButton>\n            <SmallButton text=\"Next\" onClick={(e) => { saveAndSubmit(e) }}></SmallButton>\n        </Container>\n    );\n}\n\nconst styles = {\n    p: {\n        'textAlign': 'center',\n        'color': 'white'\n    },\n    pNoBottom: {\n        'textAlign': 'center',\n        'color': 'black',\n        'margin': '0',\n        'fontWeight': 'bold'\n    },\n    formContainer: {\n        'display': 'flex',\n        'flexDirection': 'column',\n        'alignItems': 'center',\n        'justifyContent': 'center',\n        'height': '400px'\n    },\n    iconButton: {\n        'color': 'black',\n        'textDecoration': 'none'\n    },\n    iconLeft: {\n        'margin': '10px',\n        'fontSize': '20px'\n    },\n    iconRight: {\n        'margin': '10px',\n        'fontSize': '20px'\n    },\n}","import React from 'react';\nimport { Container, Dropdown } from 'react-bootstrap'\nimport SmallButton from '../../components/SmallButton'\nimport * as Cuisines from '../../config/cuisines.json'\n\n\nexport default function RecipeTypes(props) {\n\n    const saveAndSubmit = (e) => {\n        e.preventDefault()\n        props.nextStep()\n    }\n\n    const renderCuisinesDropdown = () => {\n        return Cuisines.cuisines.map((cuisine) => {\n            return <Dropdown.Item onClick={() => selectCuisines(cuisine)}>{cuisine}</Dropdown.Item>\n        })\n    }\n\n    const selectCuisines = (cuisine) => {\n        if (props.cuisines.indexOf(cuisine) < 0) {\n            console.log('CUISINE IN FUNCTION: ', cuisine)\n            props.addNewCuisine(cuisine)\n        }\n        else {\n            console.log(\"CUISINE ALREADY IN ARRAY\")\n        }\n    }\n\n    const renderCuisineButtons = () => {\n        return props.cuisines.map((cuisine) => {\n            return <SmallButton text={cuisine}></SmallButton>\n        })\n    }\n\n    return (\n        <Container style={styles.formContainer}>\n            <p style={styles.p}>First, lets pick the recipes you'd like to cook throughout the week.</p>\n            <p style={styles.p}>Select the types of cuisine you'd like to search:</p>\n            <Container style={styles.innerContainer}>\n                <Container style={styles.innerInnerContainer}>\n                    <Dropdown >\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\"\n                            style={styles.dropdown}\n                        >\n                            Cuisines\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {/* TODO: make this functional */}\n                            {/* <Dropdown.Item href=\"#/action-1\">Surprise Me!</Dropdown.Item> */}\n                            {/* <Dropdown.Divider /> */}\n                            {renderCuisinesDropdown()}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </Container>\n                <Container style={styles.innerInnerContainer}>\n                    {renderCuisineButtons()}\n                </Container>\n            </Container>\n            <SmallButton text=\"Back\" onClick={() => { props.prevStep() }}></SmallButton>\n            <SmallButton text=\"Next\" onClick={(e) => { saveAndSubmit(e) }}></SmallButton>\n        </Container>\n    );\n}\n\nconst styles = {\n    p: {\n        'textAlign': 'center',\n        'color': 'white'\n    },\n    formContainer: {\n        'display': 'flex',\n        'flexDirection': 'column',\n        'alignItems': 'center',\n        'justifyContent': 'center',\n        'height': '400px'\n    },\n    innerContainer: {\n        'display': 'flex',\n        'flexDirection': 'row',\n        'alignItems': 'center',\n        'justifyContent': 'space-between',\n    },\n    innerInnerContainer: {\n        'display': 'flex',\n        'flexDirection': 'row',\n        'alignItems': 'center',\n        'justifyContent': 'center',\n        'width': '50%',\n        'margin': '0',\n        'padding': '0'\n    },\n    dropdown: {\n        'width': '200px'\n    }\n}","import React from 'react';\nimport { Container, Dropdown } from 'react-bootstrap'\nimport SmallButton from '../../components/SmallButton'\nimport * as Restrictions from '../../config/restrictions.json'\n\n\nexport default function RecipeRestrictions(props) {\n\n    const renderDietsDropdown = () => {\n        return Restrictions.diets.map((diet) => {\n            return <Dropdown.Item onClick={() => selectDiets(diet)}>{diet}</Dropdown.Item>\n        })\n    }\n\n    const renderIntolerancesDropdown = () => {\n        return Restrictions.intolerances.map((intolerance) => {\n            return <Dropdown.Item onClick={() => selectIntolerances(intolerance)}>{intolerance}</Dropdown.Item>\n        })\n    }\n\n    const selectDiets = (diet) => {\n        if (props.diets.indexOf(diet) < 0) {\n            props.addNewDiet(diet)\n        }\n        else {\n            console.log(\"DIET ALREADY IN ARRAY\")\n        }\n    }\n\n    const selectIntolerances = (intolerance) => {\n        if (props.intolerances.indexOf(intolerance) < 0) {\n            props.addNewIntolerance(intolerance)\n        }\n        else {\n            console.log(\"RESTRICTION ALREADY IN ARRAY\")\n        }\n    }\n\n    const renderIntoleranceButtons = () => {\n        return props.intolerances.map((intolerance) => {\n            return <SmallButton text={`${intolerance}-free`}></SmallButton>\n        })\n    }\n\n    const renderDietButtons = () => {\n        return props.diets.map((diet) => {\n            return <SmallButton text={diet}></SmallButton>\n        })\n    }\n\n    return (\n        <Container style={styles.formContainer}>\n            <p style={styles.p}>Select the dietary restrictions you'd like your plan to follow:</p>\n            <Container style={styles.innerContainer}>\n                <Container style={styles.innerContainerDropdown}>\n                    <Dropdown >\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\"\n                            style={styles.dropdown}\n                        >\n                            Diets\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            <Dropdown.Item href=\"#/action-1\">None</Dropdown.Item>\n                            <Dropdown.Divider />\n                            {renderDietsDropdown()}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown >\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\"\n                            style={styles.dropdown}\n                        >\n                            Intolerances\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            <Dropdown.Item href=\"#/action-1\">None</Dropdown.Item>\n                            <Dropdown.Divider />\n                            {renderIntolerancesDropdown()}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </Container>\n                <Container style={styles.innerContainerButtons}>\n                    {renderIntoleranceButtons()}\n                    {renderDietButtons()}\n                </Container>\n            </Container>\n            <SmallButton text=\"Back\" onClick={() => { props.prevStep() }}></SmallButton>\n            <SmallButton text=\"Next\" onClick={(e) => { props.nextStep(e) }}></SmallButton>\n        </Container>\n    );\n}\n\nconst styles = {\n    p: {\n        'textAlign': 'center',\n        'color': 'white'\n    },\n    formContainer: {\n        'display': 'flex',\n        'flexDirection': 'column',\n        'alignItems': 'center',\n        'justifyContent': 'center',\n        'height': '400px'\n    },\n    innerContainer: {\n        'display': 'flex',\n        'flexDirection': 'row',\n        'alignItems': 'center',\n        'justifyContent': 'space-between',\n    },\n    innerContainerDropdown: {\n        'display': 'flex',\n        'flexDirection': 'column',\n        'alignItems': 'center',\n        'justifyContent': 'center',\n        'width': '50%',\n        'margin': '0',\n        'padding': '0'\n    },\n    innerContainerButtons: {\n        'display': 'flex',\n        'flexDirection': 'row',\n        'alignItems': 'center',\n        'justifyContent': 'center',\n        'width': '50%',\n        'margin': '0',\n        'padding': '0'\n    },\n    dropdown: {\n        'width': '200px',\n        'margin': '10px' \n    }\n}","import React, { useEffect, useState } from 'react';\nimport { Container, Card, Button } from 'react-bootstrap'\nimport recipeSearch from '../../api/recipeSearch'\nimport SmallButton from '../../components/SmallButton'\n\nexport default function AddRecipes(props) {\n\n    const [recipeData, setRecipeData] = useState([])\n    const [page, setPage] = useState(1)\n    const [currentOffset, setCurrentOffset] = useState(0)\n    //TODO: add in random return of recipes so that it's more fun to search\n\n    const renderRecipes = () => {\n        return recipeData.map((recipe) => {\n            return <Card style={styles.recipeCard} key={recipe.id}>\n                <Card.Img variant=\"top\" src={recipe.image} />\n                <Card.Body>\n                    <Card.Title>{recipe.title}</Card.Title>\n                    <Card.Text>Cuisines: {recipe.cuisines.join(', ')}</Card.Text>\n                    <Card.Text>Total Time: {recipe.readyInMinutes} minutes</Card.Text>\n                    <Card.Text>{<a href={recipe.sourceUrl} target=\"_blank\" rel=\"noopener noreferrer\">Link to Recipe</a>}</Card.Text>\n                    <Button variant=\"primary\" recipedetails={JSON.stringify(recipe)} onClick={(e) => selectRecipe(e)}>Add to Plan</Button>\n                </Card.Body>\n            </Card>\n        })\n    }\n\n    const renderNewPage = () => {\n        setCurrentOffset(currentOffset + 12)\n        setPage(page + 1)\n    }\n\n    const renderPrevPage = () => {\n        setCurrentOffset(currentOffset - 12)\n        setPage(page - 1)\n    }\n\n    const selectRecipe = (e) => {\n        console.log('our recipe details: ', e.target.getAttribute('recipedetails'))\n        props.addNewRecipe(JSON.parse(e.target.getAttribute('recipedetails')))\n\n        e.target.setAttribute(\"disabled\", true)\n        // e.target.insertAdjacentHTML(\"afterend\", `<Button variant=\"primary\" onClick=${() => removeRecipe()}>Remove from plan</Button>`)\n    }\n\n    //TODO: Enable this again\n    // function removeRecipe(e) {\n    //     console.log('you removed a recipe')\n    // }\n\n    useEffect(() => {\n        recipeSearch(props.cuisines, props.intolerances, props.diets, currentOffset).then((res) => {\n            console.log('results from search: ', res.data.results)\n            setRecipeData(res.data.results)\n        })\n    }, [page])\n\n    return (\n        <Container style={styles.formContainer}>\n            <p style={styles.p}>These are some recipes that fit what you're looking for. </p>\n            <br></br>\n            <p style={styles.p}>This is where you can add the recipes you'd like to cook to your final prep plan!</p>\n            <Container style={styles.cardContainer}>\n                {renderRecipes()}\n            </Container>\n            <Container style={styles.buttonsContainer}>\n                {currentOffset > 0 && <SmallButton text=\"Previous\" onClick={(e) => { renderPrevPage(e) }} />}\n                <SmallButton text=\"Next\" onClick={(e) => { renderNewPage(e) }}></SmallButton>\n            </Container>\n            <SmallButton text=\"Finalize Plan\" onClick={() => { props.handleFormSubmit() }}></SmallButton>\n        </Container>\n    );\n}\n\nconst styles = {\n    p: {\n        'textAlign': 'center',\n        'color': 'white'\n    },\n    formContainer: {\n        'display': 'flex',\n        'marginTop': '100px',\n        'flexDirection': 'column',\n        'alignItems': 'center',\n        'justifyContent': 'center',\n        'overflow': 'auto',\n        'height': 'auto',\n    },\n    cardContainer: {\n        'display': 'flex',\n        'flex-wrap': 'wrap',\n        'flexDirection': 'row',\n        'alignItems': 'center',\n        'justifyContent': 'space-between',\n        'overflow': 'auto',\n        'height': 'auto',\n    },\n    buttonsContainer: {\n        'display': 'flex',\n        'flexDirection': 'row',\n        'alignItems': 'center',\n        'justifyContent': 'center',\n    },\n    recipeCard: {\n        'padding': '10px',\n        'margin': '10px',\n        'width': '300px',\n    }\n}","import { axiosFoodInstance } from '../config/axios'\n\nconst apiKey = process.env.REACT_APP_API_KEY\n\nexport default function recipeSearch(cuisines, intolerances, diet, offset) {\n    console.log(\"CUISINES IN REQUEST: \", cuisines)\n\n    //modify data before request\n    let cuisinesString = cuisines.join(',')\n    let intolerancesString = intolerances.join(',')\n    let dietString = diet.join(',')\n\n    return axiosFoodInstance.get('', {\n        params: {\n            apiKey,\n            cuisine: cuisinesString,\n            intolerances: intolerancesString,\n            diet: dietString,\n            number: 2,\n            offset: offset,\n            sort: \"popularity\",\n            addRecipeInformation: true,\n            fillIngredients: true\n        }\n    })\n}","import { axiosRecipesInstance } from '../config/axios'\n\nexport function addRecipes(title, image, link, cuisines, cookTime, prepTime, totalTime, servings, ingredients, steps) {\n    return axiosRecipesInstance.post('/add_recipes', {\n        recipeTitle: title,\n        recipeImage: image,\n        recipeLink: link,\n        recipeCuisines: JSON.stringify(cuisines),\n        recipeCookTime: cookTime,\n        recipePrepTime: prepTime,\n        recipeTotalTime: totalTime,\n        recipeServings: servings,\n        recipeIngredients: JSON.stringify(ingredients),\n        recipeSteps: JSON.stringify(steps),\n    }).then((res) => ({ success: true, message: 'Successfully added new recipe', data: res.data })).catch((res) => ({ success: false, message: res, data: res }))\n}","import React, { useState, useEffect, useContext } from 'react';\nimport { Container } from 'react-bootstrap'\nimport PlanStart from './01_PlanStart'\nimport PlanTimes from './02_PlanTimes'\nimport RecipeTypes from './03_RecipeTypes'\nimport RecipeRestrictions from './04_RecipeRestrictions'\nimport moment from 'moment';\nimport AddRecipes from './05_AddRecipes'\nimport { createPlan, addPlanRecipes } from '../../api/plans'\nimport { AuthContext } from '../../AuthContext'\nimport { addRecipes } from '../../api/recipes';\nimport { useHistory } from \"react-router-dom\";\n\nexport default function CreatePlan() {\n\n    let [step, setStep] = useState(1)\n    const [startDate, setStartDate] = useState(new Date())\n    const [planDates, setPlanDates] = useState([])\n    const [planTimes, setPlanTimes] = useState([])\n    const [planCuisines, setPlanCuisines] = useState([])\n    const [planIntolerances, setPlanIntolerances] = useState([])\n    const [planDiets, setPlanDiets] = useState([])\n    const [planRecipes, setPlanRecipes] = useState([])\n\n    const auth = useContext(AuthContext)\n    const history = useHistory();\n\n    const nextStep = () => {\n        //if we are submitting first step, populate planDates with 7 day range starting from selected start date\n        if (step === 1) {\n\n            //make copy of startDate state\n            let startCopy = startDate\n\n            //initialize start and end of plan\n            let start = moment(startDate, 'YYYY-MM-DD')\n            let end = moment(start).add(7, 'days')\n\n            //placeholder arr to hold days\n            let planDatesCopy = []\n            let planTimesCopy = []\n\n            //loop from start to finish, adding to dates arr as we go\n            while (start < end) {\n                planDatesCopy.push(start.format('YYYY-MM-DD'))\n                let newDate = moment(start).add(1, 'days')\n                start = newDate\n\n                //add to our plan times array as well (populate with empty time blocks)\n                // planTimesCopy.push([[new Date(start), new Date(start)]])\n\n                //goal is to push start dates to the time array to act as placeholders\n                planTimesCopy.push([[startCopy, startCopy]])\n            }\n\n            //set state of plan dates to our new arr\n            setPlanDates(planDatesCopy)\n            setPlanTimes(planTimesCopy)\n        }\n\n        setStep(step = step + 1)\n    }\n\n    const handleFormSubmit = () => {\n        let planId\n\n        console.log('submitting form...')\n\n        let planTimesObject = {}\n\n        for (let i = 0; i < planTimes.length; i++) {\n\n            planTimesObject[i] = {}\n            let currentDay = planTimes[i]\n\n            for (let timeSlot of currentDay) {\n                planTimesObject[i][timeSlot[0].toString()] = timeSlot[1].toString()\n            }\n        }\n\n        //TODO: Consolidate this data into object, change states to single object with these details in it\n        createPlan(auth.user, startDate, planDates, planTimesObject, planCuisines, planIntolerances, planDiets).then((res) => {\n\n            console.log('plan created')\n            planId = res.data.id\n\n        }).then(async () => {\n            for (let recipe of planRecipes) {\n                await addRecipes(recipe.title, recipe.image, recipe.sourceUrl, recipe.cuisines, recipe.cookingMinutes, recipe.preparationMinutes, recipe.readyInMinutes, recipe.servings, recipe.extendedIngredients, recipe.analyzedInstructions).then(async (res) => {\n\n                    //for each recipe added, create record using that recipe PLUS current plan ID to create many to many relationship in db\n                    const planRecipeDetails = {\n                        planId: planId,\n                        recipeId: res.data.id\n                    }\n\n                    await addPlanRecipes(planRecipeDetails)\n                })\n            }\n        }).then(() => {\n            //TODO: include navigation to correct URL at this point\n            history.push(\"/single_plan/\" + planId);\n        })\n    }\n\n    const prevStep = () => {\n        setStep(step = step - 1)\n    }\n\n\n    const handleInputChange = async (date) => {\n        //set our startDate on the appropriate step\n        if (step === 1) {\n            setStartDate(date)\n        }\n    }\n\n    const addTimeBox = async (dayStep) => {\n        //shallow copy of times\n        let timesCopy = [...planTimes]\n        //shallow copy of startDate\n        let startCopy = startDate\n        //shallow copy of item to mutate\n        let time = timesCopy[dayStep]\n\n        //add default value\n        time.push([startCopy, startCopy])\n\n        //put timeslot back into original array\n        timesCopy[dayStep] = time\n\n        //modify state of time array\n        await setPlanTimes(timesCopy)\n    }\n\n    const updateTimeBoxes = async (dayStep, timeStep, date, place) => {\n\n        //shallow copy of times\n        let timesCopy = [...planTimes]\n        //shallow copy of item to mutate\n        let time = timesCopy[dayStep][timeStep][place]\n\n        //add new value\n        time = date\n\n        //put timeslot back into original array\n        timesCopy[dayStep][timeStep][place] = time\n\n        //modify state of time array\n        await setPlanTimes(timesCopy)\n    }\n\n    const addNewCuisine = async (cuisine) => {\n        //shallow copy of cuisines\n        let cuisinesCopy = [...planCuisines]\n\n        //add cuisine to copy\n        cuisinesCopy.push(cuisine)\n\n        //modify state of cuisines arr\n        await setPlanCuisines(cuisinesCopy)\n    }\n\n    const addNewIntolerance = async (intolerance) => {\n        //shallow copy of restrictions\n        let intolerancesCopy = [...planIntolerances]\n\n        //add restriction to copy\n        intolerancesCopy.push(intolerance)\n\n        //modify state of restrictions arr\n        await setPlanIntolerances(intolerancesCopy)\n    }\n\n    const addNewDiet = async (diet) => {\n        //shallow copy of restrictions\n        let dietsCopy = [...planDiets]\n\n        //add restriction to copy\n        dietsCopy.push(diet)\n\n        //modify state of restrictions arr\n        await setPlanDiets(dietsCopy)\n    }\n\n    const addNewRecipe = async (recipe) => {\n        //shallow copy of restrictions\n        let recipesCopy = [...planRecipes]\n\n        //add restriction to copy\n        recipesCopy.push(recipe)\n\n        //modify state of restrictions arr\n        await setPlanRecipes(recipesCopy)\n    }\n\n    useEffect(() => {\n        console.log('beginning date of our plan (stored): ', startDate)\n        console.log('list of days for our plan (stored): ', planDates)\n        console.log('list of TIMES for our plan (stored): ', planTimes)\n        console.log('current step: ', step)\n        console.log('OUR CUISINES (MOST RECENT): ', planCuisines)\n        console.log('OUR Intoleranecs (MOST RECENT): ', planIntolerances)\n        console.log('OUR Diets (MOST RECENT): ', planDiets)\n        console.log('OUR RECIPES (by ID)): ', planRecipes)\n    })\n\n    const formSteps = () => {\n        switch (step) {\n            case 1:\n                return <PlanStart\n                    nextStep={() => nextStep()}\n                    handleChange={(date) => handleInputChange(date)}\n                />\n            case 2:\n                return <PlanTimes\n                    startDate={startDate}\n                    planDates={planDates}\n                    planTimes={planTimes}\n                    addTimeBox={addTimeBox}\n                    updateTimeBoxes={(dayStep, timeStep, date, place) => updateTimeBoxes(dayStep, timeStep, date, place)}\n                    nextStep={() => nextStep()}\n                    prevStep={() => prevStep()}\n                    handleChange={(dates) => handleInputChange(dates)}\n                />\n            case 3:\n                return <RecipeTypes\n                    cuisines={planCuisines}\n                    addNewCuisine={(cuisine) => addNewCuisine(cuisine)}\n                    nextStep={() => nextStep()}\n                    prevStep={() => prevStep()}\n                    handleChange={() => handleInputChange()}\n                />\n            case 4:\n                return <RecipeRestrictions\n                    diets={planDiets}\n                    intolerances={planIntolerances}\n                    addNewIntolerance={(intolerance) => addNewIntolerance(intolerance)}\n                    addNewDiet={(diet) => addNewDiet(diet)}\n                    nextStep={() => nextStep()}\n                    prevStep={() => prevStep()}\n                    handleChange={() => handleInputChange()}\n                />\n            case 5:\n                return <AddRecipes\n                    cuisines={planCuisines}\n                    intolerances={planIntolerances}\n                    diets={planDiets}\n                    addNewRecipe={(recipe) => addNewRecipe(recipe)}\n                    prevStep={() => prevStep()}\n                    handleFormSubmit={() => handleFormSubmit()}\n                    handleChange={() => handleInputChange()}\n                />\n            default:\n                return <PlanStart\n                    nextStep={() => nextStep()}\n                    handleChange={(date) => handleInputChange(date)} />\n        }\n    }\n\n\n    return (\n        <Container style={styles.contentContainer}>\n            {formSteps()}\n        </Container>\n    );\n}\n\nconst styles = {\n    p: {\n        'color': 'black'\n    },\n    contentContainer: {\n        'display': 'flex',\n        'flexDirection': 'column',\n        'alignItems': 'center',\n        'justifyContent': 'center',\n        'height': 'auto',\n        'marginBottom': '200px',\n        'overflow': 'auto'\n    }\n}","import { axiosPlansInstance } from '../config/axios'\n\nexport function createPlan(user, start, dates, times, cuisines, intolerances, diets, recipes) {\n    return axiosPlansInstance.post('/create_plan', {\n        userId: user,\n        startDate: start,\n        planDates: JSON.stringify(dates),\n        planTimes: JSON.stringify(times),\n        planCuisines: JSON.stringify(cuisines),\n        planIntolerances: JSON.stringify(intolerances),\n        planDiets: JSON.stringify(diets),\n    }).then((res) => ({ success: true, message: 'Successfully created new plan', data: res.data })).catch((res) => ({ success: false, message: res, data: res }))\n}\n\nexport function addPlanRecipes(data) {\n    return axiosPlansInstance.post('/plan_recipes', {\n        data\n    }).then((res) => ({ success: true, message: 'Successfully created new plan', data: res.data })).catch((res) => ({ success: false, message: res, data: res }))\n}\n\nexport function findSinglePlan(id) {\n    return axiosPlansInstance.get('/single_plan/' + id).then((res) => ({ success: true, message: 'Found plan by ID', data: res.data })).catch((res) => ({ success: false, message: res, data: res }))\n}\n\nexport function findAllUserPlans(id) {\n    return axiosPlansInstance.get('/all_plans/' + id).then((res) => ({ success: true, message: 'Found all plans for current user', data: res.data })).catch((res) => ({ success: false, message: res, data: res }))\n}","import React from 'react'\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\n\nexport default function SamplePlan(props) {\n\n    return (\n        <FullCalendar\n            plugins={[dayGridPlugin, timeGridPlugin]}\n            initialView=\"timeGrid\"\n            visibleRange={{\n                start: props.startDate,\n                end: props.endDate,\n            }}\n            headerToolbar={{\n                left: '',\n                center: 'title',\n                right: ''\n            }}\n            events={props.events}\n            allDaySlot={false}\n            slotMinTime=\"05:00:00\"\n        />\n    )\n}","//This is required because apparently neither moment.js nor the native JS date object allow for the adding of variable amounts of days. Will reformat time input to be correct at a later date.\n\nDate.prototype.addDays = function (days) {\n    let date = new Date(this.valueOf());\n    date.setDate(date.getDate() + days);\n    return date;\n}\n\nexport const createEvents = (data, recipes) => {\n    let events = []\n    let recipeTitles = recipes.map(recipe => { return recipe.recipe_title })\n\n    for (let i = 0; i < Object.keys(data).length; i++) {\n\n        let currentDay = data[i]\n\n        switch (i) {\n            case 0:\n                for (let timeSlot in currentDay) {\n                    if (timeSlot !== currentDay[timeSlot]) {\n                        let startTimeDate = new Date(timeSlot)\n                        let endTimeDate = new Date(currentDay[timeSlot])\n\n                        let copyStart = startTimeDate.addDays(0)\n                        let copyEnd = endTimeDate.addDays(0)\n\n                        let startTime = copyStart\n                        let endTime = copyEnd\n                        let event = {\n                            title: 'Time to cook: ' + recipeTitles.shift() || 'No recipe for this time slot',\n                            start: startTime,\n                            end: endTime\n                        }\n\n                        events.push(event)\n                    }\n                }\n                break\n            case 1:\n                for (let timeSlot in currentDay) {\n                    if (timeSlot !== currentDay[timeSlot]) {\n                        let startTimeDate = new Date(timeSlot)\n                        let endTimeDate = new Date(currentDay[timeSlot])\n\n                        let copyStart = startTimeDate.addDays(1)\n                        let copyEnd = endTimeDate.addDays(1)\n\n                        let startTime = copyStart\n                        let endTime = copyEnd\n                        let event = {\n                            title: recipeTitles.shift(),\n                            start: startTime,\n                            end: endTime\n                        }\n                        events.push(event)\n                    }\n                }\n                break\n            case 2:\n                for (let timeSlot in currentDay) {\n                    if (timeSlot !== currentDay[timeSlot]) {\n                        let startTimeDate = new Date(timeSlot)\n                        let endTimeDate = new Date(currentDay[timeSlot])\n\n                        let copyStart = startTimeDate.addDays(2)\n                        let copyEnd = endTimeDate.addDays(2)\n\n                        let startTime = copyStart\n                        let endTime = copyEnd\n                        let event = {\n                            title: recipeTitles.shift(),\n                            start: startTime,\n                            end: endTime\n                        }\n                        events.push(event)\n                    }\n                }\n                break\n            case 3:\n                for (let timeSlot in currentDay) {\n                    if (timeSlot !== currentDay[timeSlot]) {\n                        let startTimeDate = new Date(timeSlot)\n                        let endTimeDate = new Date(currentDay[timeSlot])\n\n                        let copyStart = startTimeDate.addDays(3)\n                        let copyEnd = endTimeDate.addDays(3)\n\n                        let startTime = copyStart\n                        let endTime = copyEnd\n                        let event = {\n                            title: recipeTitles.shift(),\n                            start: startTime,\n                            end: endTime\n                        }\n                        events.push(event)\n                    }\n                }\n                break\n            case 4:\n                for (let timeSlot in currentDay) {\n                    if (timeSlot !== currentDay[timeSlot]) {\n                        let startTimeDate = new Date(timeSlot)\n                        let endTimeDate = new Date(currentDay[timeSlot])\n\n                        let copyStart = startTimeDate.addDays(4)\n                        let copyEnd = endTimeDate.addDays(4)\n\n                        let startTime = copyStart\n                        let endTime = copyEnd\n                        let event = {\n                            title: recipeTitles.shift(),\n                            start: startTime,\n                            end: endTime\n                        }\n                        events.push(event)\n                    }\n                }\n                break\n            case 5:\n                for (let timeSlot in currentDay) {\n                    if (timeSlot !== currentDay[timeSlot]) {\n                        let startTimeDate = new Date(timeSlot)\n                        let endTimeDate = new Date(currentDay[timeSlot])\n\n                        let copyStart = startTimeDate.addDays(5)\n                        let copyEnd = endTimeDate.addDays(5)\n\n                        let startTime = copyStart\n                        let endTime = copyEnd\n                        let event = {\n                            title: recipeTitles.shift(),\n                            start: startTime,\n                            end: endTime\n                        }\n                        events.push(event)\n                    }\n                }\n                break\n            case 6:\n                for (let timeSlot in currentDay) {\n                    if (timeSlot !== currentDay[timeSlot]) {\n                        let startTimeDate = new Date(timeSlot)\n                        let endTimeDate = new Date(currentDay[timeSlot])\n\n                        let copyStart = startTimeDate.addDays(6)\n                        let copyEnd = endTimeDate.addDays(6)\n\n                        let startTime = copyStart\n                        let endTime = copyEnd\n                        let event = {\n                            title: recipeTitles.shift(),\n                            start: startTime,\n                            end: endTime\n                        }\n                        events.push(event)\n                    }\n                }\n                break\n            case 7:\n                for (let timeSlot in currentDay) {\n                    if (timeSlot !== currentDay[timeSlot]) {\n                        let startTimeDate = new Date(timeSlot)\n                        let endTimeDate = new Date(currentDay[timeSlot])\n\n                        let copyStart = startTimeDate.addDays(7)\n                        let copyEnd = endTimeDate.addDays(7)\n\n                        let startTime = copyStart\n                        let endTime = copyEnd\n                        let event = {\n                            title: recipeTitles.shift(),\n                            start: startTime,\n                            end: endTime\n                        }\n                        events.push(event)\n                    }\n                }\n                break\n        }\n    }\n    return events\n}\n","import React, { useEffect, useState } from 'react';\nimport { Container, Card } from 'react-bootstrap'\nimport { findSinglePlan } from '../api/plans'\nimport { useParams } from \"react-router-dom\";\nimport Calendar from '../components/Calendar'\nimport { createEvents } from '../config/createEvents'\n\nexport default function Plan() {\n\n    const [dataLoaded, setDataLoaded] = useState(false)\n    const [planData, setPlanData] = useState(null)\n\n    let { planId } = useParams()\n\n    const createIngredientsList = async (data) => {\n        if (planData.ingredients.length > 0) {\n            return\n        }\n        let ingredientsList = new Set()\n\n        for (let recipe of data) {\n            for (let ingredient of JSON.parse(recipe.recipe_ingredients)) {\n                ingredientsList.add(ingredient.name)\n            }\n        }\n\n        await setPlanData({\n            ...planData,\n            ingredients: Array.from(ingredientsList)\n        })\n\n        setDataLoaded(true)\n    }\n\n    useEffect(() => {\n        findSinglePlan(planId).then((res) => {\n            setPlanData({\n                id: res.data.id,\n                planCuisines: JSON.parse(res.data.planCuisines),\n                planDates: JSON.parse(res.data.planDates),\n                planTimes: JSON.parse(res.data.planTimes),\n                recipes: res.data.recipes,\n                ingredients: []\n            })\n        })\n    }, [])\n\n    useEffect(() => {\n        if (planData !== null) {\n            createIngredientsList(planData.recipes)\n        }\n    }, [planData])\n\n    //Once fetched, return plan data\n    if (dataLoaded && planData) {\n        return (\n            <Container style={styles.formContainer}>\n                <h2 style={styles.planHeader}>Meal Plan #{planData.id}</h2>\n                {/* If user has selected times for plan, display calender */}\n                {createEvents(planData.planTimes, planData.recipes).length > 0 ? (\n                    <Container style={styles.calendarContainer}>\n                        < Calendar startDate={planData.planDates[0]} endDate={new Date(planData.planDates[6]).addDays(1)} events={createEvents(planData.planTimes, planData.recipes)}></Calendar>\n                    </Container>\n                ) : null}\n\n                <Container style={styles.contentContainer}>\n                    <Container style={styles.outerCardContainer}>\n                        <h3 style={styles.cardHeader}>This week's recipes</h3>\n                        <Container style={styles.innerCardContainer}>\n                            {planData.recipes.map((recipe, index) => {\n                                return <Card style={styles.recipeCard} key={index}>\n                                    <Card.Img variant=\"top\" src={recipe.recipe_image} />\n                                    <Card.Body>\n                                        <Card.Title>{recipe.recipe_title}</Card.Title>\n                                        <Card.Text>Cuisines: {JSON.parse(recipe.recipe_cuisines).join(', ')}</Card.Text>\n                                        <Card.Text>Total Time: {recipe.recipe_total_time} minutes</Card.Text>\n                                        <Card.Text>{<a href={recipe.recipe_link} target=\"_blank\" rel=\"noopener noreferrer\">Link to Recipe</a>}</Card.Text>\n                                    </Card.Body>\n                                </Card>\n                            })}\n                        </Container>\n                    </Container>\n\n                    <Card>\n                        <Card.Body>\n                            <Card.Title>Shopping List</Card.Title>\n                            {\n                                planData.ingredients.length > 0 ? (\n                                    planData.ingredients.map((ingredient, index) => {\n                                        return <p key={index}>{ingredient}</p>\n                                    })) : (\n                                        <p>Ingredients Not Found</p>\n                                    )\n                            }\n                        </Card.Body>\n                    </Card>\n                </Container>\n            </Container >\n        );\n    }\n\n    //Return loading if the plan data is still fetching\n    else {\n        return (\n            <Container style={styles.formContainer}>\n                <p>loading plan data</p>\n            </Container>\n        )\n    }\n}\n\nconst styles = {\n    p: {\n        'textAlign': 'center',\n        'color': 'white'\n    },\n    formContainer: {\n        'display': 'flex',\n        'flexDirection': 'column',\n        'alignItems': 'center',\n        'justifyContent': 'center',\n        'background': '#5D737E',\n        'opacity': '.90',\n        'padding': '40px 10px',\n        'paddingBottom': '20px',\n        'paddingTop': '20px'\n\n    },\n    calendarContainer: {\n        'margin': '10px',\n        'padding': '10px',\n        'background': 'rgb(136, 162, 170)',\n        'opacity': '.90',\n    },\n    contentContainer: {\n        'display': 'flex',\n    },\n    recipeCard: {\n        'padding': '10px',\n        'margin': '10px',\n        'width': '40%',\n    },\n    outerCardContainer: {\n        'display': 'flex',\n        'flexWrap': 'wrap',\n        'justifyContent': 'center',\n        'height': '5%'\n    },\n    innerCardContainer: {\n        'display': 'flex',\n        'flex-wrap': 'wrap',\n        'flexDirection': 'row',\n        'justifyContent': 'space-around',\n        'overflow': 'auto',\n    },\n    cardHeader: {\n        'background': '#BB342F',\n        'opacity': '.90',\n        'padding': '5px 10px',\n        'display': 'inline-block',\n        'borderRadius': '25px',\n        'margin': '0px',\n        'color': 'white',\n    },\n    planHeader: {\n        'background': '#BB342F',\n        'opacity': '.90',\n        'padding': '5px 10px',\n        'display': 'inline-block',\n        'borderRadius': '25px',\n        'marginBottom': '20px',\n        'color': 'white',\n        'textAlign': 'center'\n    },\n    headerStyle: {\n        'margin': '0px',\n        'text-align': 'center'\n    }\n}","import React from 'react'\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\n\n\nexport default function SamplePlan() {\n  return (\n    <FullCalendar\n      plugins={[dayGridPlugin, timeGridPlugin]}\n      initialView=\"timeGrid\"\n      visibleRange={{\n        start: '2020-01-01',\n        end: '2020-01-08',\n      }}\n      headerToolbar={{\n        left: '',\n        center: 'title',\n        right: ''\n      }}\n    />\n  )\n}","import React, { useState, useEffect, useContext } from 'react';\nimport { Container } from 'react-bootstrap'\nimport { findAllUserPlans } from '../api/plans'\nimport { AuthContext } from '../AuthContext'\nimport { NavLink } from 'react-router-dom'\n\n\nexport default function AllPlans() {\n\n    const [plans, setPlans] = useState(null)\n    const auth = useContext(AuthContext)\n\n    useEffect(() => {\n        findAllUserPlans(auth.user).then((res) => {\n            console.log('response from all plans search: ', res)\n            if (res.data.length === 0) {\n                setPlans(false)\n            }\n            else {\n                setPlans(res.data)\n            }\n        })\n    }, [])\n\n    //if plan data is still fetching\n    if (plans === null) {\n        return (\n            <Container style={styles.formContainer}>\n                <p>loading user plans</p>\n            </Container>\n        )\n    }\n    //if user has not created any plans\n    if (plans === false) {\n        return (\n            <Container style={styles.formContainer}>\n                <p>No plans for current user. Create one now!</p>\n            </Container>\n        )\n    }\n\n    return (\n        <Container style={styles.formContainer}>\n            <p style={styles.p}>Here is where you can view all plans you have created</p>\n            {plans.map((plan, index) => { return <NavLink to={'/single_plan/' + plan.id}><p key={index}>View Details for plan {plan.id}, from {JSON.parse(plan.planDates)[0]} to {JSON.parse(plan.planDates)[6]}</p></NavLink> })}\n        </Container>\n    );\n}\n\nconst styles = {\n    p: {\n        'textAlign': 'center',\n        'color': 'white'\n    },\n    formContainer: {\n        'display': 'flex',\n        'flexDirection': 'column',\n        'alignItems': 'center',\n        'justifyContent': 'center',\n        'height': '400px'\n    }\n}","import React, { useState, useContext } from \"react\";\nimport { Button, Form, Container } from \"react-bootstrap\";\nimport { Redirect } from 'react-router-dom';\nimport { login } from '../../api/authentication'\nimport { AuthContext } from '../../AuthContext'\n\nexport default function Login(props) {\n\n    // const from = props.location.state || { from: { pathname: '/' } }\n    const from = { from: { pathname: '/' } }\n\n    const [redirectToReferrer, setRedirectToReferrer] = useState(false);\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const auth = useContext(AuthContext)\n\n    const validateForm = () => {\n        return email.length > 0 && password.length > 0;\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        login(email, password).then(async (res) => {\n            if (!res.success) {\n                alert('Login has failed. Recheck your credentials');\n            }\n            else {\n                console.log('Logging in.')\n                await auth.handleLogin(res)\n                setRedirectToReferrer(true)\n            }\n        })\n    }\n\n    if (redirectToReferrer) {\n        return <Redirect to={from} />;\n    }\n\n    if(auth.loggedIn){\n        return <Redirect to='/' />;\n    }\n\n    return (\n        <Container className=\"Login\" style={styles.formContainer}>\n            <Form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"email\" bssize=\"large\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control\n                        autoFocus\n                        type=\"email\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"password\" bssize=\"large\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        type=\"password\"\n                    />\n                </Form.Group>\n                <Button block bssize=\"large\" disabled={!validateForm()} type=\"submit\">\n                    Login\n                    </Button>\n            </Form>\n        </Container>\n    );\n}\n\nconst styles = {\n    p: {\n        'textAlign': 'center',\n        'color': 'white'\n    },\n    formContainer: {\n        'display': 'flex',\n        'flexDirection': 'column',\n        'alignItems': 'center',\n        'justifyContent': 'center',\n        'height': '400px'\n    }\n}","import React, { useState, useContext } from \"react\";\nimport { Button, Form, Container } from \"react-bootstrap\";\nimport { signup } from '../../api/authentication'\nimport { Redirect } from 'react-router-dom';\nimport { AuthContext } from '../../AuthContext'\n\nexport default function Signup(props) {\n\n    const from = { from: { pathname: '/' } }\n\n    const [redirectToReferrer, setRedirectToReferrer] = useState(false);\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [passwordValid, setPasswordValid] = useState(\"\");\n\n    const auth = useContext(AuthContext)\n\n    const validateForm = () => {\n        return (email.length > 0 && password.length > 0);\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (password !== passwordValid) {\n            alert('passwords must match');\n            setPassword(\"\")\n            setPasswordValid(\"\")\n            return false;\n        }\n\n        signup(email, password).then(async (res) => {\n            if (!res.success) {\n                alert('Signup has failed. Recheck your credentials');\n            }\n            else {\n                console.log('Signup Successful -> Logging in.')\n                await auth.handleLogin(res)\n                setRedirectToReferrer(true)\n            }\n        })\n    }\n\n    if (redirectToReferrer) {\n        return <Redirect to={from} />;\n    }\n\n    if(auth.loggedIn){\n        return <Redirect to='/' />;\n    }\n\n    return (\n        <Container className=\"Signup\" style={styles.formContainer}>\n            <Form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"email\" bssize=\"large\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control\n                        autoFocus\n                        type=\"email\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                </Form.Group>\n                <Form.Group bssize=\"large\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        type=\"password\"\n                    />\n                    <Form.Label>Re-enter password</Form.Label>\n                    <Form.Control\n                        value={passwordValid}\n                        onChange={e => setPasswordValid(e.target.value)}\n                        type=\"password\"\n                    />\n                </Form.Group>\n                <Button block bssize=\"large\" disabled={!validateForm()} type=\"submit\">\n                    Signup\n        </Button>\n            </Form>\n        </Container>\n    );\n}\n\nconst styles = {\n    p: {\n        'textAlign': 'center',\n        'color': 'white'\n    },\n    formContainer: {\n        'display': 'flex',\n        'flexDirection': 'column',\n        'alignItems': 'center',\n        'justifyContent': 'center',\n        'height': '400px'\n    }\n}","import React from 'react';\nimport { Container } from 'react-bootstrap'\n\nexport default function Password() {\n\n    return (\n        <Container style={styles.formContainer}>\n            <p style={styles.p}>This is where  USER PASSWORD</p>\n        </Container>\n    );\n}\n\nconst styles = {\n    p: {\n        'textAlign': 'center',\n        'color': 'white'\n    },\n    formContainer: {\n        'display': 'flex',\n        'flexDirection': 'column',\n        'alignItems': 'center',\n        'justifyContent': 'center',\n        'height': '400px'\n    }\n}","import React, { useContext } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { AuthContext } from './AuthContext'\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\n\n    const auth = useContext(AuthContext)\n\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          auth.loggedIn ? (\n            <Component {...props} />\n          ) : (\n              <Redirect\n                to={{ pathname: '/login', state: { from: props.location } }}\n              />\n            )\n        }\n      />\n    );\n  };","import React, { useState, useEffect } from 'react';\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Main from './screens/Main'\nimport CreatePlan from './screens/CreatePlan/00_CreatePlan'\nimport SinglePlan from './screens/SinglePlan'\nimport SamplePlan from './screens/SamplePlan'\nimport AllPlans from './screens/AllPlans'\nimport Login from './screens/Auth/Login'\nimport Signup from './screens/Auth/Signup'\nimport Password from './screens/Auth/ForgotPassword'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { checkSession } from './api/authentication'\nimport { AuthContext } from './AuthContext'\nimport { PrivateRoute } from './PrivateRoute'\n\nexport default function App() {\n\n  const [loggedIn, setLoggedIn] = useState(false)\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n\n    //if user is not logged in, check to see if session exists\n    if (!loggedIn) {\n      console.log('Checking session...')\n      checkSession().then((res) => {\n        console.log('Response from session check: ', res)\n\n        //if our session check returns false for isAuthenticated, log out user\n        if (!res.success) {\n          console.log('user not logged in, logging out')\n          // setLoggedIn(false)\n        }\n        //otherwise, log them in and redirect to home page\n        else {\n          console.log('Existing Session Detected')\n          setLoggedIn(true)\n          setUser(res.data)\n        }\n      })\n    }\n  }, [loggedIn])\n\n  const handleLogin = async (res) => {\n    console.log('this is the login handler: ')\n    console.log(res)\n    setUser(res.data)\n    await setLoggedIn(res.success)\n  }\n\n  return (\n    <AuthContext.Provider value={{ loggedIn: loggedIn, user: user, handleLogin: handleLogin }}>\n      <BrowserRouter>\n        <Container>\n          <Header></Header>\n          <Switch>\n            {/* PROTECTED  ROUTES*/}\n            <PrivateRoute exact path='/' component={Main} />\n            <PrivateRoute path='/all' component={AllPlans} />\n            <PrivateRoute path='/create' component={CreatePlan} />\n            <PrivateRoute path='/single_plan/:planId' component={SinglePlan} />\n\n            {/* PUBLIC ROUTES*/}\n            <Route exact path='/login' component={Login} />\n            <Route exact path='/signup' component={Signup} />\n            <Route path='/password' component={Password} />\n            <Route path='/sample' component={SamplePlan} />\n          </Switch>\n        </Container>\n      </BrowserRouter>\n    </AuthContext.Provider>\n  );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}